[{"C:\\GitHub\\employee-managment-system\\frontend\\src\\index.js":"1","C:\\GitHub\\employee-managment-system\\frontend\\src\\reportWebVitals.js":"2","C:\\GitHub\\employee-managment-system\\frontend\\src\\App.js":"3","C:\\GitHub\\employee-managment-system\\frontend\\src\\components\\Footer.jsx":"4","C:\\GitHub\\employee-managment-system\\frontend\\src\\components\\Main.jsx":"5","C:\\GitHub\\employee-managment-system\\frontend\\src\\components\\Header.jsx":"6","C:\\GitHub\\employee-managment-system\\frontend\\src\\screens\\SignUpScreen.jsx":"7","C:\\GitHub\\employee-managment-system\\frontend\\src\\screens\\SignInScreen.jsx":"8","C:\\GitHub\\employee-managment-system\\frontend\\src\\screens\\ViewEmployeesScreen.jsx":"9","C:\\GitHub\\employee-managment-system\\frontend\\src\\screens\\AdminPanel.jsx":"10","C:\\GitHub\\employee-managment-system\\frontend\\src\\screens\\ForgotPassword.jsx":"11","C:\\GitHub\\employee-managment-system\\frontend\\src\\screens\\ResetPassword.jsx":"12","C:\\GitHub\\employee-managment-system\\frontend\\src\\context\\index.js":"13","C:\\GitHub\\employee-managment-system\\frontend\\src\\services\\userService.js":"14","C:\\GitHub\\employee-managment-system\\frontend\\src\\services\\AdminService.js":"15","C:\\GitHub\\employee-managment-system\\frontend\\src\\services\\userHelperService.js":"16","C:\\GitHub\\employee-managment-system\\frontend\\src\\utils\\validate.js":"17","C:\\GitHub\\employee-managment-system\\frontend\\src\\components\\PageHeader.jsx":"18","C:\\GitHub\\employee-managment-system\\frontend\\src\\components\\LanguageButton.jsx":"19","C:\\GitHub\\employee-managment-system\\frontend\\src\\components\\EmployeeItem.jsx":"20","C:\\GitHub\\employee-managment-system\\frontend\\src\\components\\UserInquiry.jsx":"21","C:\\GitHub\\employee-managment-system\\frontend\\src\\screens\\AddEmployee.jsx":"22","C:\\GitHub\\employee-managment-system\\frontend\\src\\components\\EmployeeCard.jsx":"23","C:\\GitHub\\employee-managment-system\\frontend\\src\\screens\\EditEmployee.jsx":"24","C:\\GitHub\\employee-managment-system\\frontend\\src\\services\\employeeService.js":"25","C:\\GitHub\\employee-managment-system\\frontend\\src\\config\\config.js":"26"},{"size":554,"mtime":1636018346571,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":1198,"mtime":1637068918631,"results":"30","hashOfConfig":"28"},{"size":249,"mtime":1635339956643,"results":"31","hashOfConfig":"28"},{"size":263,"mtime":1636282588226,"results":"32","hashOfConfig":"28"},{"size":2799,"mtime":1636409719226,"results":"33","hashOfConfig":"28"},{"size":13056,"mtime":1637066472657,"results":"34","hashOfConfig":"28"},{"size":6978,"mtime":1637193029125,"results":"35","hashOfConfig":"28"},{"size":6451,"mtime":1637191686125,"results":"36","hashOfConfig":"28"},{"size":6516,"mtime":1637528637567,"results":"37","hashOfConfig":"28"},{"size":7167,"mtime":1641327756255,"results":"38","hashOfConfig":"28"},{"size":11481,"mtime":1637195345980,"results":"39","hashOfConfig":"28"},{"size":4627,"mtime":1637102194916,"results":"40","hashOfConfig":"28"},{"size":3635,"mtime":1636666699582,"results":"41","hashOfConfig":"28"},{"size":1877,"mtime":1636718322956,"results":"42","hashOfConfig":"28"},{"size":1440,"mtime":1637070078520,"results":"43","hashOfConfig":"28"},{"size":2332,"mtime":1636315589076,"results":"44","hashOfConfig":"28"},{"size":200,"mtime":1636223416069,"results":"45","hashOfConfig":"28"},{"size":1590,"mtime":1636586351492,"results":"46","hashOfConfig":"28"},{"size":3616,"mtime":1636315663191,"results":"47","hashOfConfig":"28"},{"size":317,"mtime":1635847901954,"results":"48","hashOfConfig":"28"},{"size":12241,"mtime":1637190046543,"results":"49","hashOfConfig":"28"},{"size":7791,"mtime":1637192160159,"results":"50","hashOfConfig":"28"},{"size":13189,"mtime":1637190062155,"results":"51","hashOfConfig":"28"},{"size":3292,"mtime":1637067935857,"results":"52","hashOfConfig":"28"},{"size":349,"mtime":1636040723143,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"brae3n",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\GitHub\\employee-managment-system\\frontend\\src\\index.js",[],["111","112"],"C:\\GitHub\\employee-managment-system\\frontend\\src\\reportWebVitals.js",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\App.js",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\components\\Footer.jsx",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\components\\Main.jsx",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\components\\Header.jsx",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\screens\\SignUpScreen.jsx",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\screens\\SignInScreen.jsx",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\screens\\ViewEmployeesScreen.jsx",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\screens\\AdminPanel.jsx",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\screens\\ForgotPassword.jsx",["113"],"C:\\GitHub\\employee-managment-system\\frontend\\src\\screens\\ResetPassword.jsx",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\context\\index.js",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\services\\userService.js",["114"],"import axios from 'axios'\r\nimport { apiUrl, headers, tokenKey } from \"../config/config\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\n// Logout user.\r\nexport function logout() {\r\n    // remove token from Localstorage \r\n    localStorage.removeItem(tokenKey)\r\n}\r\n\r\n// check if token exist (in localStorage).\r\nexport function getCurrentUser() {\r\n    try {\r\n        // try to take the token from localStorage\r\n        const jwt = localStorage.getItem(tokenKey); \r\n        \r\n        // decode and return him\r\n        return jwtDecode(JSON.parse(jwt).token);\r\n\r\n    } catch(ex) {\r\n        // if not exist return null \r\n        return null\r\n    }\r\n}\r\n\r\n// extract user data from localStorage.\r\nexport function userData() {\r\n    try {\r\n        // try to take the token from localStorage\r\n        const jwt = JSON.parse(localStorage.getItem(tokenKey)).token; \r\n\r\n        const data = jwtDecode(jwt).userData;\r\n        \r\n        const user = {\r\n            _id: data._id,\r\n            firstName: data.firstName,\r\n            lastName: data.lastName,\r\n            email: data.email,\r\n            userImage: data.userImage,\r\n            isAdmin: data.isAdmin,\r\n            isEditor: data.isEditor\r\n        }\r\n\r\n        // return him\r\n        return user;\r\n\r\n    } catch(ex) {\r\n        // if not exist return null \r\n        return null\r\n    }\r\n}\r\n\r\n\r\n// @desc    Register a new user\r\n// @route   [POST] /api/users/register\r\n// @access  Public\r\n// @payload user: { firstName, lastName, email, image, password }\r\nexport async function registerUser(user){\r\n\r\n\r\n    if( ! user.userImage ) {\r\n        user.userImage = \"empty\"\r\n    }\r\n\r\n    try {\r\n\r\n        // send user data and get the response (user data + token).\r\n        const { data } = await axios.post(\r\n            `${apiUrl}/api/users/register`,\r\n            user,\r\n        )\r\n\r\n        // set the token in local storage (connect the user)\r\n        localStorage.setItem(tokenKey, JSON.stringify(data))\r\n\r\n\r\n        // return user data outside\r\n        return data;\r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n\r\n// @desc    Login - Auth user & get token.\r\n// @route   [POST] /api/users/login\r\n// @access  Public\r\n// @payload email, password\r\nexport async function loginUser(email, password){\r\n    \r\n    try {\r\n\r\n        // send email & password and get the response (user data + token).\r\n        const { data } = await axios.post(\r\n            `${apiUrl}/api/users/login`,\r\n             {email, password}\r\n        )\r\n\r\n        \r\n        // set the token in local storage (connect the user)\r\n        localStorage.setItem(tokenKey, JSON.stringify(data))\r\n\r\n\r\n        // return user data outside\r\n        return data;\r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n\r\n// @desc    Get user profile\r\n// @route   [GET] /api/users/profile\r\n// @access  Private\r\n// @payload userId\r\nexport async function getUserProfile(userId){\r\n    \r\n    try {\r\n\r\n        // send id of the current user, and get all user in = data variable.\r\n        const { data } = await axios.post(\r\n            `${apiUrl}/api/users/profile`,\r\n             userId,\r\n             {headers}\r\n        )\r\n  \r\n        \r\n        // return all data outside \r\n        return data\r\n\r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst userMethods = {\r\n    registerUser,\r\n    loginUser,\r\n    getUserProfile,\r\n    getCurrentUser,\r\n    logout,\r\n}\r\n\r\nexport default userMethods","C:\\GitHub\\employee-managment-system\\frontend\\src\\services\\AdminService.js",["115"],"import axios from 'axios'\r\nimport { apiUrl, headers } from \"../config/config\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\n\r\n// --------------- Admin Privileges ----------------\r\n\r\n// @desc    get all users\r\n// @route   [GET] /api/users/get-all-users\r\n// @access  Admin.\r\n// @payload [no payload]\r\nexport async function getAllUsers() {\r\n\r\n    try {\r\n        // get all users\r\n        const { data } = await axios.get(\r\n            `${apiUrl}/api/users/get-all-users`,\r\n            {headers}\r\n        )\r\n\r\n        // return all data outside \r\n        return data \r\n            \r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// @desc    set user permissions (basic (only view), Editor , Admin)\r\n// @route   [GET] /api/users/user-permissions\r\n// @access  Admin.\r\n// @payload {userEmail, userAuth}\r\nexport async function userPermissions(userEmail, userAuth){\r\n    \r\n    const user = {userEmail,userAuth}\r\n    try {\r\n\r\n        // send userEmail, userAuth\r\n        const { data } = await axios.put(\r\n            `${apiUrl}/api/users/user-permissions`,\r\n            user,\r\n            {headers}\r\n        )\r\n\r\n        // return all data outside.\r\n        return data\r\n\r\n\r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// @desc    get a single user.\r\n// @route   [GET] /api/users/:id\r\n// @access  Admin.\r\n// @payload \r\n\r\n// @desc    create user.\r\n// @route   [POST] /api/users/createUser\r\n// @access  Admin.\r\n// @payload \r\n\r\n// @desc    update user.\r\n// @route   [PUT] /api/users/updateUser\r\n// @access  Admin.\r\n// @payload \r\n\r\n// @desc    remove user.\r\n// @route   [DELETE] /api/users/deleteUser\r\n// @access  Admin.\r\n// @payload \r\n\r\n\r\nconst userMethods = {\r\n    getAllUsers,\r\n    userPermissions\r\n}\r\n\r\nexport default userMethods","C:\\GitHub\\employee-managment-system\\frontend\\src\\services\\userHelperService.js",["116"],"import axios from 'axios';\r\nimport { apiUrl, headers } from '../config/config'\r\n\r\n\r\n\r\n\r\n\r\n// @desc    Send to server the user's email (To get a password reset link).\r\n// @route   [POST] /user-helper/forgot-password\r\n// @access  Public\r\n// @payload {email}.\r\nexport async function sendResetPassToEmail(email){\r\n    \r\n    try {\r\n        // get a single employee byid - to the data variable with content-type in headers\r\n        const { data } = await axios.post(\r\n            `${apiUrl}/user-helper/forgot-password`,\r\n            {email},\r\n        )\r\n\r\n        // return all data outside \r\n        return data\r\n             \r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// @desc    get reset-password EJS html.\r\n// @route   [PUT] /user-helper/reset-password/:token\r\n// @access  Public\r\n// @payload /:id/:token\r\nexport async function updateNewUserPassword(password, token){\r\n    console.log('userHelper Service ------', password);\r\n    try {\r\n        // get a single employee byid - to the data variable with content-type in headers\r\n        const { data } = await axios.put(\r\n            `${apiUrl}/user-helper/reset-password/${token}`,\r\n            {password},\r\n        )\r\n        \r\n        // return all data outside.\r\n        return data\r\n\r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n","C:\\GitHub\\employee-managment-system\\frontend\\src\\utils\\validate.js",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\components\\PageHeader.jsx",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\components\\LanguageButton.jsx",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\components\\EmployeeItem.jsx",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\components\\UserInquiry.jsx",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\screens\\AddEmployee.jsx",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\components\\EmployeeCard.jsx",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\screens\\EditEmployee.jsx",[],"C:\\GitHub\\employee-managment-system\\frontend\\src\\services\\employeeService.js",["117"],"import axios from 'axios';\r\nimport { apiUrl, headers } from '../config/config'\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\n\r\n// @desc    get all employees.\r\n// @route   [GET] /api/employees\r\n// @access  Private\r\n// @payload [no payload]\r\nexport async function getAllEmployees() {\r\n\r\n    try {\r\n        // get all employee list - to the data variable with content-type in headers\r\n        const { data } = await axios.get(\r\n            `${apiUrl}/api/employees`,\r\n            {headers}\r\n        )\r\n\r\n        // return all data outside \r\n        return data \r\n            \r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n\r\n// @desc    get a single employee.\r\n// @route   [GET] /api/employees/:id\r\n// @access  Private\r\n// @payload employeeID\r\nexport async function getEmployee(empId) {\r\n\r\n    try {\r\n        // get a single employee byid - to the data variable with content-type in headers\r\n        const { data } = await axios.get(\r\n            `${apiUrl}/api/employees/${empId}`,\r\n            {headers}\r\n        )\r\n         \r\n        // return all data outside \r\n        return data\r\n            \r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n\r\n// @desc    create employee.\r\n// @route   [POST] /api/employees/createEmployee\r\n// @access  Private\r\n// @payload employee: {firstName, lastName, phone, adress, roll}\r\nexport async function createEmployee(employee){\r\n\r\n\r\n    try {\r\n        // get a single employee byid - to the data variable with content-type in headers\r\n        const { data } = await axios.post(\r\n            `${apiUrl}/api/employees/createEmployee`,\r\n            {employee},\r\n            {headers}\r\n        )\r\n\r\n        // return all data outside \r\n        return data\r\n             \r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n\r\n// @desc    update employee.\r\n// @route   [PUT] /api/employees/updateEmployee\r\n// @access  Private\r\n// @payload employee: { firstName, lastName, phone, adress, roll} & :id\r\nexport async function editEmployee(employeeId, employee){\r\n\r\n    try {\r\n        // get a single employee byid - to the data variable with content-type in headers\r\n        const { data } = await axios.put(\r\n            `${apiUrl}/api/employees/updateEmployee/${employeeId}`,\r\n            employee,\r\n            {headers}\r\n        )\r\n        \r\n        // return all data outside.\r\n        return data\r\n\r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n\r\n// @desc    remove employee.\r\n// @route   [DELETE] /api/employees/deleteEmployee\r\n// @access  Private\r\n// @payload employeeID\r\nexport async function deleteEmployee(empId) {\r\n\r\n    try {\r\n        // get a single employee byid - to the data variable with content-type in headers\r\n        const { data } = await axios.delete(\r\n            `${apiUrl}/api/employees/deleteEmployee/${empId}`,\r\n            {headers}\r\n        )\r\n         \r\n        // return all data outside \r\n        return data\r\n                  \r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}","C:\\GitHub\\employee-managment-system\\frontend\\src\\config\\config.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":14},{"ruleId":"122","severity":1,"message":"126","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":15},{"ruleId":"122","severity":1,"message":"126","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":15},{"ruleId":"122","severity":1,"message":"127","line":2,"column":18,"nodeType":"124","messageId":"125","endLine":2,"endColumn":25},{"ruleId":"122","severity":1,"message":"126","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":15},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","'headers' is defined but never used.","no-global-assign","no-unsafe-negation"]