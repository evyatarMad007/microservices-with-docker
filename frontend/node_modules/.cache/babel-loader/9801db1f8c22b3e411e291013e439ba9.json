{"ast":null,"code":"import axios from 'axios';\nimport { apiUrl, headers } from '../config/config';\nimport { toast } from \"react-toastify\"; // @desc    get all employees.\n// @route   [GET] /api/employees\n// @access  Private\n// @payload [no payload]\n\nexport async function getAllEmployees() {\n  try {\n    // get all employee list - to the data variable with content-type in headers\n    const {\n      data\n    } = await axios.get(`${apiUrl}/api/employees`, {\n      headers\n    }); // return all data outside \n\n    return data;\n  } catch (err) {\n    if (err.response) {\n      return err.response.data.message;\n    }\n  }\n} // @desc    get a single employee.\n// @route   [GET] /api/employees/:id\n// @access  Private\n// @payload employeeID\n\nexport async function getEmployee(empId) {\n  try {\n    // get a single employee byid - to the data variable with content-type in headers\n    const {\n      data\n    } = await axios.get(`${apiUrl}/api/employees/${empId}`, {\n      headers\n    }); // return all data outside \n\n    return data;\n  } catch (err) {\n    if (err.response) {\n      return err.response.data.message;\n    }\n  }\n} // @desc    create employee.\n// @route   [POST] /api/employees/createEmployee\n// @access  Private\n// @payload employee: {firstName, lastName, phone, adress, roll}\n\nexport async function createEmployee(employee) {\n  try {\n    // get a single employee byid - to the data variable with content-type in headers\n    const {\n      data\n    } = await axios.post(`${apiUrl}/api/employees/createEmployee`, {\n      employee\n    }, {\n      headers\n    }); // return all data outside \n\n    return data;\n  } catch (err) {\n    if (err.response) {\n      return err.response.data.message;\n    }\n  }\n} // @desc    update employee.\n// @route   [PUT] /api/employees/updateEmployee\n// @access  Private\n// @payload employee: { firstName, lastName, phone, adress, roll} & :id\n\nexport async function editEmployee(employeeId, employee) {\n  try {\n    // get a single employee byid - to the data variable with content-type in headers\n    const {\n      data\n    } = await axios.put(`${apiUrl}/api/employees/updateEmployee/${employeeId}`, employee, {\n      headers\n    }); // return all data outside.\n\n    return data;\n  } catch (err) {\n    if (err.response) {\n      return err.response.data.message;\n    }\n  }\n} // @desc    remove employee.\n// @route   [DELETE] /api/employees/deleteEmployee\n// @access  Private\n// @payload employeeID\n\nexport async function deleteEmployee(empId) {\n  try {\n    // get a single employee byid - to the data variable with content-type in headers\n    const {\n      data\n    } = await axios.delete(`${apiUrl}/api/employees/deleteEmployee/${empId}`, {\n      headers\n    }); // return all data outside \n\n    return data;\n  } catch (err) {\n    if (err.response) {\n      return err.response.data.message;\n    }\n  }\n}","map":{"version":3,"sources":["C:/GitHub/employee-managment-system/frontend/src/services/employeeService.js"],"names":["axios","apiUrl","headers","toast","getAllEmployees","data","get","err","response","message","getEmployee","empId","createEmployee","employee","post","editEmployee","employeeId","put","deleteEmployee","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,kBAAhC;AACA,SAASC,KAAT,QAAsB,gBAAtB,C,CAIA;AACA;AACA;AACA;;AACA,OAAO,eAAeC,eAAf,GAAiC;AAEpC,MAAI;AACA;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,GAAN,CAClB,GAAEL,MAAO,gBADS,EAEnB;AAACC,MAAAA;AAAD,KAFmB,CAAvB,CAFA,CAOA;;AACA,WAAOG,IAAP;AAEH,GAVD,CAUG,OAAOE,GAAP,EAAY;AACX,QAAIA,GAAG,CAACC,QAAR,EAAmB;AACf,aAAOD,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,OAAzB;AACH;AACJ;AACJ,C,CAED;AACA;AACA;AACA;;AACA,OAAO,eAAeC,WAAf,CAA2BC,KAA3B,EAAkC;AAErC,MAAI;AACA;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,GAAN,CAClB,GAAEL,MAAO,kBAAiBU,KAAM,EADd,EAEnB;AAACT,MAAAA;AAAD,KAFmB,CAAvB,CAFA,CAOA;;AACA,WAAOG,IAAP;AAEH,GAVD,CAUG,OAAOE,GAAP,EAAY;AACX,QAAIA,GAAG,CAACC,QAAR,EAAmB;AACf,aAAOD,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,OAAzB;AACH;AACJ;AACJ,C,CAED;AACA;AACA;AACA;;AACA,OAAO,eAAeG,cAAf,CAA8BC,QAA9B,EAAuC;AAG1C,MAAI;AACA;AACA,UAAM;AAAER,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACc,IAAN,CAClB,GAAEb,MAAO,+BADS,EAEnB;AAACY,MAAAA;AAAD,KAFmB,EAGnB;AAACX,MAAAA;AAAD,KAHmB,CAAvB,CAFA,CAQA;;AACA,WAAOG,IAAP;AAEH,GAXD,CAWG,OAAOE,GAAP,EAAY;AACX,QAAIA,GAAG,CAACC,QAAR,EAAmB;AACf,aAAOD,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,OAAzB;AACH;AACJ;AACJ,C,CAED;AACA;AACA;AACA;;AACA,OAAO,eAAeM,YAAf,CAA4BC,UAA5B,EAAwCH,QAAxC,EAAiD;AAEpD,MAAI;AACA;AACA,UAAM;AAAER,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACiB,GAAN,CAClB,GAAEhB,MAAO,iCAAgCe,UAAW,EADlC,EAEnBH,QAFmB,EAGnB;AAACX,MAAAA;AAAD,KAHmB,CAAvB,CAFA,CAQA;;AACA,WAAOG,IAAP;AAEH,GAXD,CAWG,OAAOE,GAAP,EAAY;AACX,QAAIA,GAAG,CAACC,QAAR,EAAmB;AACf,aAAOD,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,OAAzB;AACH;AACJ;AACJ,C,CAED;AACA;AACA;AACA;;AACA,OAAO,eAAeS,cAAf,CAA8BP,KAA9B,EAAqC;AAExC,MAAI;AACA;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACmB,MAAN,CAClB,GAAElB,MAAO,iCAAgCU,KAAM,EAD7B,EAEnB;AAACT,MAAAA;AAAD,KAFmB,CAAvB,CAFA,CAOA;;AACA,WAAOG,IAAP;AAEH,GAVD,CAUG,OAAOE,GAAP,EAAY;AACX,QAAIA,GAAG,CAACC,QAAR,EAAmB;AACf,aAAOD,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,OAAzB;AACH;AACJ;AACJ","sourcesContent":["import axios from 'axios';\r\nimport { apiUrl, headers } from '../config/config'\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\n\r\n// @desc    get all employees.\r\n// @route   [GET] /api/employees\r\n// @access  Private\r\n// @payload [no payload]\r\nexport async function getAllEmployees() {\r\n\r\n    try {\r\n        // get all employee list - to the data variable with content-type in headers\r\n        const { data } = await axios.get(\r\n            `${apiUrl}/api/employees`,\r\n            {headers}\r\n        )\r\n\r\n        // return all data outside \r\n        return data \r\n            \r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n\r\n// @desc    get a single employee.\r\n// @route   [GET] /api/employees/:id\r\n// @access  Private\r\n// @payload employeeID\r\nexport async function getEmployee(empId) {\r\n\r\n    try {\r\n        // get a single employee byid - to the data variable with content-type in headers\r\n        const { data } = await axios.get(\r\n            `${apiUrl}/api/employees/${empId}`,\r\n            {headers}\r\n        )\r\n         \r\n        // return all data outside \r\n        return data\r\n            \r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n\r\n// @desc    create employee.\r\n// @route   [POST] /api/employees/createEmployee\r\n// @access  Private\r\n// @payload employee: {firstName, lastName, phone, adress, roll}\r\nexport async function createEmployee(employee){\r\n\r\n\r\n    try {\r\n        // get a single employee byid - to the data variable with content-type in headers\r\n        const { data } = await axios.post(\r\n            `${apiUrl}/api/employees/createEmployee`,\r\n            {employee},\r\n            {headers}\r\n        )\r\n\r\n        // return all data outside \r\n        return data\r\n             \r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n\r\n// @desc    update employee.\r\n// @route   [PUT] /api/employees/updateEmployee\r\n// @access  Private\r\n// @payload employee: { firstName, lastName, phone, adress, roll} & :id\r\nexport async function editEmployee(employeeId, employee){\r\n\r\n    try {\r\n        // get a single employee byid - to the data variable with content-type in headers\r\n        const { data } = await axios.put(\r\n            `${apiUrl}/api/employees/updateEmployee/${employeeId}`,\r\n            employee,\r\n            {headers}\r\n        )\r\n        \r\n        // return all data outside.\r\n        return data\r\n\r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n\r\n// @desc    remove employee.\r\n// @route   [DELETE] /api/employees/deleteEmployee\r\n// @access  Private\r\n// @payload employeeID\r\nexport async function deleteEmployee(empId) {\r\n\r\n    try {\r\n        // get a single employee byid - to the data variable with content-type in headers\r\n        const { data } = await axios.delete(\r\n            `${apiUrl}/api/employees/deleteEmployee/${empId}`,\r\n            {headers}\r\n        )\r\n         \r\n        // return all data outside \r\n        return data\r\n                  \r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}