{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\employee-managment-system\\\\frontend\\\\src\\\\screens\\\\SignUpScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PageHeader from '../components/PageHeader';\nimport LanguageButton from '../components/LanguageButton';\nimport personImg from '../images/sign-in-img.png';\nimport UserInquiry from '../components/UserInquiry';\nimport { formValidationHandler } from '../utils/validate';\nimport { getCurrentUser } from '../services/userService';\nimport { Consumer } from '../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpScreen = () => {\n  _s();\n\n  // component Language \n  const [leng, setLeng] = useState(localStorage.getItem('Language') || 'en');\n\n  const checkLanguage = lengProps => {\n    setLeng(lengProps);\n  }; // form value & valid stats\n\n\n  const [firstName, setFirstName] = useState({});\n  const [lastName, setLastName] = useState({});\n  const [email, setEmail] = useState({});\n  const [password, setPassword] = useState({});\n  const [confirmPassword, setConfirmPassword] = useState({}); // const [passwordChecker, setPasswordChecker] = useState({})\n  // general settings stats\n\n  const [firstNameLabel, setFirstNameLabel] = useState(true);\n  const [lastNameLabel, setLastNameLabel] = useState(true);\n  const [emailLabel, setEmailLabel] = useState(true);\n  const [passwordLabel, setPasswordLabel] = useState(true);\n  const [showPassword, setShowPassword] = useState(false);\n  const [confirmPasswordLabel, setConfirmPasswordLabel] = useState(true);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const inputBlurHandler = (inp, value) => {\n    if (value.length === 0 || value === 'DEFAULT') {\n      if (inp === 'firstName') {\n        setFirstNameLabel(true);\n        if (firstName.error) setFirstName(firstName.error = '');\n      }\n\n      if (inp === 'lastName') {\n        setLastNameLabel(true);\n        if (lastName.error) setLastName(lastName.error = '');\n      }\n\n      if (inp === 'email') {\n        setEmailLabel(true);\n        if (email.error) setEmail(email.error = '');\n      }\n\n      if (inp === 'password') {\n        setPasswordLabel(true);\n        if (password.error) setPassword(password.error = '');\n      }\n\n      if (inp === 'confirmPassword') {\n        setConfirmPasswordLabel(true);\n        if (confirmPassword.error) setConfirmPassword(confirmPassword.error = '');\n      }\n    }\n  };\n\n  const validateHandler = (inp, value) => {\n    let setTheState;\n    const errorValidate = formValidationHandler(inp, value); // first Name: \n\n    if (inp === 'firstName') {\n      if (!errorValidate) {\n        setTheState = {\n          type: inp,\n          isValid: true,\n          value,\n          error: errorValidate\n        };\n      } else {\n        setTheState = {\n          type: inp,\n          isValid: false,\n          value,\n          error: errorValidate\n        };\n      }\n\n      setFirstName(setTheState);\n    } // last Name: \n\n\n    if (inp === 'lastName') {\n      if (!errorValidate) {\n        setTheState = {\n          type: inp,\n          isValid: true,\n          value,\n          error: errorValidate\n        };\n      } else {\n        setTheState = {\n          type: inp,\n          isValid: false,\n          value,\n          error: errorValidate\n        };\n      }\n\n      setLastName(setTheState);\n    } // email: \n\n\n    if (inp === 'email') {\n      if (!errorValidate) {\n        setTheState = {\n          type: inp,\n          isValid: true,\n          value,\n          error: errorValidate\n        };\n      } else {\n        setTheState = {\n          type: inp,\n          isValid: false,\n          value,\n          error: errorValidate\n        };\n      }\n\n      setEmail(setTheState);\n    } // password: \n\n\n    if (inp === 'password') {\n      if (!errorValidate) {\n        setTheState = {\n          type: inp,\n          isValid: true,\n          value,\n          error: errorValidate\n        };\n      } else {\n        setTheState = {\n          type: inp,\n          isValid: false,\n          value,\n          error: errorValidate\n        };\n      }\n\n      setPassword(setTheState);\n    } // confirm password: \n\n\n    if (inp === 'confirmPassword') {\n      if (!errorValidate) {\n        setTheState = {\n          type: inp,\n          isValid: true,\n          value,\n          error: errorValidate\n        };\n      } else {\n        setTheState = {\n          type: inp,\n          isValid: false,\n          value,\n          error: errorValidate\n        };\n      }\n\n      setConfirmPassword(setTheState);\n    }\n  };\n\n  if (getCurrentUser()) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 35\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Consumer, {\n    children: context => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sign-up  sign-up-${leng}`,\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        children: leng === 'en' ? 'Sign Up' : 'הרשמה'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(LanguageButton, {\n        checkLanguage: checkLanguage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"sign-up__form\",\n        onSubmit: e => {\n          e.preventDefault();\n\n          if (context.actions.userSignUp) {\n            context.actions.userSignUp({\n              firstName: firstName.value,\n              lastName: lastName.value,\n              email: email.value,\n              userImage: \"\",\n              password: password.value\n            });\n          }\n        },\n        autoComplete: \"off\",\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"person-img-box\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"person-img\",\n            src: personImg,\n            alt: \"person-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"group-title\",\n          children: leng === 'en' ? 'Personal Details' : 'פרטים אישיים'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: firstNameLabel ? 'label-focus' : '',\n            htmlFor: \"firstName\",\n            children: leng === 'en' ? 'First Name' : 'שם פרטי'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onBlur: e => inputBlurHandler('firstName', e.target.value),\n            onFocus: () => setFirstNameLabel(false),\n            type: \"text\",\n            name: \"firstName\",\n            onChange: e => validateHandler(\"firstName\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), firstName.error && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-valid\",\n            children: leng === 'en' ? `${firstName.error}` : 'שם פרטי חייב להכיל רק אותיות ובאורך 2-20.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: lastNameLabel ? 'label-focus' : '',\n            htmlFor: \"lastName\",\n            children: leng === 'en' ? 'Last Name' : 'שם משפחה'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onBlur: e => inputBlurHandler('lastName', e.target.value),\n            onFocus: () => setLastNameLabel(false),\n            type: \"text\",\n            name: \"lastName\",\n            onChange: e => validateHandler(\"lastName\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this), lastName.error && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-valid\",\n            children: leng === 'en' ? `${lastName.error}` : 'שם משפחה חייב להכיל רק אותיות ובאורך 2-20.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: emailLabel ? 'label-focus' : '',\n            htmlFor: \"email\",\n            children: leng === 'en' ? 'Email' : 'אימייל'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onBlur: e => inputBlurHandler('email', e.target.value),\n            onFocus: () => setEmailLabel(false),\n            type: \"email\",\n            name: \"email\",\n            onChange: e => validateHandler(\"email\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), email.error && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-valid\",\n            children: leng === 'en' ? `${email.error}` : 'האימייל אינו חוקי: חייב להכיל פורמט דוא\"ל.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"group-title\",\n          children: leng === 'en' ? 'Password' : 'סיסמה'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: passwordLabel ? 'label-focus' : '',\n            htmlFor: \"password\",\n            children: leng === 'en' ? 'Password' : 'סיסמה'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onBlur: e => inputBlurHandler('password', e.target.value),\n            onFocus: () => setPasswordLabel(false),\n            type: showPassword ? 'text' : 'password',\n            autoComplete: \"on\",\n            name: \"password\",\n            onChange: e => validateHandler(\"password\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), password.error && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-valid\",\n            children: leng === 'en' ? `${password.error}` : `הסיסמה חייבת להיות: 6-20 תווים, אותיות גדולות וקטנות באנגלית ומספר`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"show-password\",\n            onClick: () => setShowPassword(!showPassword),\n            children: showPassword ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-eye-slash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-eye\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 84\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: confirmPasswordLabel ? 'label-focus' : '',\n            htmlFor: \"confirmPassword\",\n            children: leng === 'en' ? 'Retype Password' : 'אמת סיסמה'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onBlur: e => inputBlurHandler('confirmPassword', e.target.value),\n            onFocus: () => setConfirmPasswordLabel(false),\n            type: showConfirmPassword ? 'text' : 'Password',\n            autoComplete: \"on\",\n            name: \"confirmPassword\",\n            onChange: e => validateHandler(\"confirmPassword\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this), confirmPassword.error && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-valid\",\n            children: leng === 'en' ? `${confirmPassword.error}` : `הסיסמה חייבת להיות: 6-20 תווים, אותיות גדולות וקטנות באנגלית ומספר`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"show-password\",\n            onClick: () => setShowConfirmPassword(!showConfirmPassword),\n            children: showConfirmPassword ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-eye-slash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 52\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-eye\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 91\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"password-match-error\",\n            children: password.isValid && confirmPassword.isValid ? password.value === confirmPassword.value ? '' : leng === 'en' ? 'The passwords do not match' : 'הסיסמאות לא תואמות' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit\",\n            type: \"submit\",\n            disabled: password.isValid && confirmPassword.isValid && firstName.isValid && lastName.isValid && email.isValid ? password.value === confirmPassword.value ? false : true : true,\n            children: leng === 'en' ? 'Sign Up' : 'הירשם'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(UserInquiry, {\n        question: leng === 'en' ? 'Have an account?' : 'יש לך חשבון?',\n        path: \"sign-in\",\n        linkText: leng === 'en' ? 'Sign In' : 'התחבר'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 8\n  }, this);\n};\n\n_s(SignUpScreen, \"MQSkJKrFdIDDM3jH5gGga9W4AXg=\");\n\n_c = SignUpScreen;\nexport default SignUpScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpScreen\");","map":{"version":3,"sources":["C:/GitHub/employee-managment-system/frontend/src/screens/SignUpScreen.jsx"],"names":["React","useState","Redirect","PageHeader","LanguageButton","personImg","UserInquiry","formValidationHandler","getCurrentUser","Consumer","SignUpScreen","leng","setLeng","localStorage","getItem","checkLanguage","lengProps","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","firstNameLabel","setFirstNameLabel","lastNameLabel","setLastNameLabel","emailLabel","setEmailLabel","passwordLabel","setPasswordLabel","showPassword","setShowPassword","confirmPasswordLabel","setConfirmPasswordLabel","showConfirmPassword","setShowConfirmPassword","inputBlurHandler","inp","value","length","error","validateHandler","setTheState","errorValidate","type","isValid","context","e","preventDefault","actions","userSignUp","userImage","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport PageHeader from '../components/PageHeader'\r\nimport LanguageButton from '../components/LanguageButton'\r\nimport personImg from '../images/sign-in-img.png'\r\nimport UserInquiry from '../components/UserInquiry'\r\nimport { formValidationHandler } from '../utils/validate'\r\nimport {getCurrentUser} from '../services/userService'\r\nimport { Consumer } from '../context'\r\n\r\nconst SignUpScreen = () => {\r\n\r\n    // component Language \r\n    const [leng, setLeng] = useState(localStorage.getItem('Language') || 'en')\r\n\r\n    const checkLanguage = (lengProps) => {\r\n        setLeng(lengProps)\r\n    }\r\n\r\n    // form value & valid stats\r\n    const [firstName, setFirstName] = useState({})\r\n    const [lastName, setLastName] = useState({})\r\n    const [email, setEmail] = useState({})\r\n    const [password, setPassword] = useState({})\r\n    const [confirmPassword, setConfirmPassword] = useState({})\r\n    // const [passwordChecker, setPasswordChecker] = useState({})\r\n\r\n    // general settings stats\r\n    const [firstNameLabel, setFirstNameLabel] = useState(true)\r\n    const [lastNameLabel, setLastNameLabel] = useState(true)\r\n    const [emailLabel, setEmailLabel] = useState(true)\r\n    const [passwordLabel, setPasswordLabel] = useState(true)\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [confirmPasswordLabel, setConfirmPasswordLabel] = useState(true)\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false)\r\n\r\n    const inputBlurHandler = (inp,value) => {\r\n        if( value.length === 0 || value === 'DEFAULT') {\r\n\r\n            if(inp === 'firstName') {\r\n                setFirstNameLabel(true)\r\n                if(firstName.error) setFirstName(firstName.error = '')\r\n            }\r\n            if(inp === 'lastName') {\r\n                setLastNameLabel(true)\r\n                if(lastName.error) setLastName(lastName.error = '')\r\n            }\r\n            if(inp === 'email') {\r\n                setEmailLabel(true)\r\n                if(email.error) setEmail(email.error = '')\r\n            }\r\n            if(inp === 'password'){ \r\n                setPasswordLabel(true)\r\n                if(password.error) setPassword(password.error = '')\r\n            }\r\n            if(inp === 'confirmPassword'){ \r\n                setConfirmPasswordLabel(true)\r\n                if(confirmPassword.error) setConfirmPassword(confirmPassword.error = '')\r\n            }\r\n        }\r\n    }\r\n\r\n    const validateHandler = (inp, value) => {\r\n        let setTheState;\r\n        const errorValidate = formValidationHandler(inp, value);\r\n        // first Name: \r\n        if( inp === 'firstName' ) {\r\n            if(! errorValidate) {\r\n                setTheState = { type: inp, isValid: true, value, error: errorValidate}\r\n\r\n            } else {\r\n                setTheState = { type: inp, isValid: false, value, error: errorValidate}\r\n\r\n            }\r\n            setFirstName(setTheState)\r\n        }\r\n        // last Name: \r\n        if( inp === 'lastName' ) {\r\n            if(! errorValidate) {\r\n                setTheState = { type: inp, isValid: true, value, error: errorValidate}\r\n            } else {\r\n                setTheState = { type: inp, isValid: false, value, error: errorValidate}\r\n\r\n            }\r\n            setLastName(setTheState)\r\n        }\r\n\r\n        // email: \r\n        if( inp === 'email' ) {\r\n            if(! errorValidate) {\r\n                setTheState = { type: inp, isValid: true, value, error: errorValidate}\r\n            } else {\r\n                setTheState = { type: inp, isValid: false, value, error: errorValidate }\r\n            }\r\n            setEmail(setTheState)\r\n        }\r\n\r\n        // password: \r\n        if( inp === 'password' ) {\r\n            if(! errorValidate) {\r\n                setTheState = { type: inp, isValid: true, value, error: errorValidate}\r\n                \r\n            }  else {\r\n                setTheState = { type: inp, isValid: false, value, error: errorValidate }\r\n            }\r\n            setPassword(setTheState)\r\n        } \r\n        // confirm password: \r\n        if( inp === 'confirmPassword' ) {\r\n            if(! errorValidate) {\r\n                setTheState = { type: inp, isValid: true, value, error: errorValidate}\r\n            }  else {\r\n                setTheState = { type: inp, isValid: false, value, error: errorValidate }\r\n            }\r\n            setConfirmPassword(setTheState)\r\n        }\r\n    }\r\n\r\n\r\n    if( getCurrentUser() ) return <Redirect to=\"/\"/>      \r\n\r\n    return (\r\n       <Consumer>\r\n           {\r\n               context => (\r\n                <div className={`sign-up  sign-up-${leng}`}>\r\n                    <PageHeader>{ leng === 'en' ? 'Sign Up' : 'הרשמה' }</PageHeader>\r\n        \r\n                    <LanguageButton checkLanguage={checkLanguage} />\r\n                    <form \r\n                        className=\"sign-up__form\" \r\n                        onSubmit={ (e) =>  {\r\n                            e.preventDefault()\r\n                            if(context.actions.userSignUp) {\r\n                                context.actions.userSignUp(\r\n                                    {\r\n                                        firstName: firstName.value,\r\n                                        lastName: lastName.value,\r\n                                        email: email.value,\r\n                                        userImage: \"\",\r\n                                        password: password.value \r\n                                    }\r\n                                )\r\n                            }\r\n                        }} \r\n                        autoComplete=\"off\" noValidate\r\n                        >\r\n                        <div className=\"person-img-box\">\r\n                            <img className=\"person-img\" src={personImg} alt=\"person-img\" />\r\n                        </div>\r\n                        \r\n                        <span className='group-title'>{ leng === 'en' ? 'Personal Details' : 'פרטים אישיים' }</span>\r\n        \r\n                        <div className=\"input-wrapper\">\r\n                            <label className={firstNameLabel ? 'label-focus' : ''} htmlFor=\"firstName\">{ leng === 'en' ? 'First Name' : 'שם פרטי' }</label>\r\n                            <input \r\n                                onBlur={ (e) => inputBlurHandler('firstName',e.target.value)}  \r\n                                onFocus={ () => setFirstNameLabel(false)} \r\n                                type=\"text\" name=\"firstName\" \r\n                                onChange={ e => validateHandler(\"firstName\", e.target.value)} \r\n                            />\r\n                            {firstName.error && <span className=\"error-valid\">{ leng === 'en' ? `${firstName.error}` : 'שם פרטי חייב להכיל רק אותיות ובאורך 2-20.' }</span>}\r\n                        </div>\r\n        \r\n                        <div className=\"input-wrapper\">\r\n                            <label className={lastNameLabel ? 'label-focus' : ''} htmlFor=\"lastName\">{ leng === 'en' ? 'Last Name' : 'שם משפחה' }</label>\r\n                            <input \r\n                                onBlur={ (e) => inputBlurHandler('lastName',e.target.value)} \r\n                                onFocus={ () => setLastNameLabel(false)} \r\n                                type=\"text\" name=\"lastName\" \r\n                                onChange={ e => validateHandler(\"lastName\", e.target.value)} \r\n                            />\r\n                            {lastName.error && <span className=\"error-valid\">{ leng === 'en' ? `${lastName.error}` : 'שם משפחה חייב להכיל רק אותיות ובאורך 2-20.' }</span>}\r\n                        </div>\r\n        \r\n                        <div className=\"input-wrapper\">\r\n                            <label className={emailLabel ? 'label-focus' : ''} htmlFor=\"email\">{ leng === 'en' ? 'Email' : 'אימייל' }</label>\r\n                            <input \r\n                                onBlur={ (e) => inputBlurHandler('email',e.target.value)} \r\n                                onFocus={ () => setEmailLabel(false)} type=\"email\" name=\"email\" \r\n                                onChange={ e => validateHandler(\"email\", e.target.value)} \r\n                            />\r\n                            {email.error && <span className=\"error-valid\">{ leng === 'en' ? `${email.error}` : 'האימייל אינו חוקי: חייב להכיל פורמט דוא\"ל.' }</span>}\r\n                        </div>\r\n                        <br /><br /><br /><br /><br />\r\n\r\n                        <span className='group-title'>{ leng === 'en' ? 'Password' : 'סיסמה' }</span>\r\n    \r\n                        <div className=\"input-wrapper\">\r\n                            <label className={passwordLabel ? 'label-focus' : ''} htmlFor=\"password\">{ leng === 'en' ? 'Password' : 'סיסמה' }</label>\r\n                            <input \r\n                                onBlur={ (e) => inputBlurHandler('password',e.target.value)} \r\n                                onFocus={ () => setPasswordLabel(false)} \r\n                                type={ showPassword ? 'text' : 'password'}  \r\n                                autoComplete=\"on\" name=\"password\" \r\n                                onChange={ e => validateHandler(\"password\", e.target.value)} \r\n                            />\r\n                            {password.error && <span className=\"error-valid\">{ leng === 'en' ? `${password.error}` : `הסיסמה חייבת להיות: 6-20 תווים, אותיות גדולות וקטנות באנגלית ומספר` }</span>}\r\n                            <span className=\"show-password\" onClick={ () => setShowPassword( ! showPassword )}>\r\n                            {showPassword ? <i className=\"far fa-eye-slash\"></i> : <i className=\"far fa-eye\"></i>}\r\n                            </span>\r\n                        </div>\r\n        \r\n                        <div className=\"input-wrapper\">\r\n                            <label className={confirmPasswordLabel ? 'label-focus' : ''} htmlFor=\"confirmPassword\">{ leng === 'en' ? 'Retype Password' : 'אמת סיסמה' }</label>\r\n                            <input \r\n                                onBlur={ (e) => inputBlurHandler('confirmPassword',e.target.value)} \r\n                                onFocus={ () => setConfirmPasswordLabel(false)} \r\n                                type={ showConfirmPassword ? 'text' : 'Password'}  \r\n                                autoComplete=\"on\" name=\"confirmPassword\" \r\n                                onChange={ e => validateHandler(\"confirmPassword\", e.target.value)} \r\n                            />\r\n                            {confirmPassword.error && <span className=\"error-valid\">{ leng === 'en' ? `${confirmPassword.error}` : `הסיסמה חייבת להיות: 6-20 תווים, אותיות גדולות וקטנות באנגלית ומספר` }</span>}\r\n                            <span className=\"show-password\" onClick={ () => setShowConfirmPassword( ! showConfirmPassword )}>\r\n                            {showConfirmPassword ? <i className=\"far fa-eye-slash\"></i> : <i className=\"far fa-eye\"></i>}\r\n                            </span>\r\n                        </div>\r\n                        \r\n                        <div className=\"button-wrapper\">\r\n                            <p className=\"password-match-error\">\r\n                                {\r\n                                password.isValid  && confirmPassword.isValid \r\n                                    ? password.value === confirmPassword.value\r\n                                        ? ''\r\n                                        : leng === 'en' ? 'The passwords do not match' : 'הסיסמאות לא תואמות' \r\n                                    : ''\r\n\r\n                            }</p>  \r\n                            <button \r\n                                className=\"submit\" \r\n                                type=\"submit\" \r\n                                disabled={\r\n                                    password.isValid && confirmPassword.isValid && firstName.isValid && lastName.isValid  && email.isValid \r\n                                     ? password.value === confirmPassword.value \r\n                                        ? false \r\n                                        : true\r\n                                     : true\r\n                                }\r\n                                >{ leng === 'en' ? 'Sign Up' : 'הירשם' }\r\n                            </button>\r\n                        </div>\r\n        \r\n                    </form>\r\n                    <UserInquiry question={ leng === 'en' ? 'Have an account?' : 'יש לך חשבון?' } path=\"sign-in\" linkText={ leng === 'en' ? 'Sign In' : 'התחבר' } />\r\n                    \r\n                    \r\n                </div>\r\n               )\r\n           }\r\n       </Consumer>\r\n\r\n    )\r\n}\r\n\r\nexport default SignUpScreen\r\n"]},"metadata":{},"sourceType":"module"}