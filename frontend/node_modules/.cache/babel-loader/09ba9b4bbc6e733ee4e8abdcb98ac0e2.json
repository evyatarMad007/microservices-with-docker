{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\employee-managment-system\\\\frontend\\\\src\\\\components\\\\LanguageButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LanguageButton = ({\n  checkLanguage\n}) => {\n  _s();\n\n  const [optionList, setOptionList] = useState(false);\n  const [language, setLanguage] = useState(localStorage.getItem('Language') || 'en');\n\n  const setLanguageHandler = lang => {\n    setLanguage(lang);\n    checkLanguage(lang);\n    localStorage.setItem('Language', lang);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lang-btn-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lang-btn\",\n      onMouseLeave: () => setOptionList(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lang-btn__select-box\",\n        onClick: () => setOptionList(!optionList),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"lang-btn__current-language\",\n          children: language === 'en' ? 'En' : 'עב'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: `lang-btn__options-list ${optionList && 'lang-btn__options-list-on'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"lang-btn__option\",\n          onClick: () => {\n            setOptionList(false);\n            setLanguageHandler('en');\n          },\n          children: \"En\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"lang-btn__option\",\n          onClick: () => {\n            setOptionList(false);\n            setLanguageHandler('he');\n          },\n          children: \"\\u05E2\\u05D1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LanguageButton, \"ng+syVu6B4jRdt7Tk3Ht3Rm+NAY=\");\n\n_c = LanguageButton;\nexport default LanguageButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageButton\");","map":{"version":3,"sources":["C:/GitHub/employee-managment-system/frontend/src/components/LanguageButton.jsx"],"names":["React","useState","LanguageButton","checkLanguage","optionList","setOptionList","language","setLanguage","localStorage","getItem","setLanguageHandler","lang","setItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAqB;AAAA;;AAGxC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACO,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAoC,IAArC,CAAxC;;AAGA,QAAMC,kBAAkB,GAAGC,IAAI,IAAI;AAC/BJ,IAAAA,WAAW,CAACI,IAAD,CAAX;AACAR,IAAAA,aAAa,CAACQ,IAAD,CAAb;AACAH,IAAAA,YAAY,CAACI,OAAb,CAAqB,UAArB,EAAiCD,IAAjC;AAEH,GALD;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA2B,MAAA,YAAY,EAAG,MAAMN,aAAa,CAAC,KAAD,CAA7D;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAsC,QAAA,OAAO,EAAG,MAAMA,aAAa,CAAC,CAACD,UAAF,CAAnE;AAAA,+BACA;AAAM,UAAA,SAAS,EAAC,4BAAhB;AAAA,oBAA8CE,QAAQ,KAAK,IAAb,GAAoB,IAApB,GAA2B;AAAzE;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAI,QAAA,SAAS,EAAG,0BAAyBF,UAAU,IAAI,2BAA4B,EAAnF;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,kBAAd;AACI,UAAA,OAAO,EAAG,MAAM;AACZC,YAAAA,aAAa,CAAC,KAAD,CAAb;AACAK,YAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,WAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAI,UAAA,SAAS,EAAC,kBAAd;AACI,UAAA,OAAO,EAAG,MAAM;AACZL,YAAAA,aAAa,CAAC,KAAD,CAAb;AACAK,YAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,WAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CA3CD;;GAAMR,c;;KAAAA,c;AA6CN,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst LanguageButton = ({checkLanguage}) => {\r\n\r\n\r\n    const [optionList, setOptionList] = useState(false)\r\n    const [language, setLanguage] = useState(localStorage.getItem('Language') || 'en')\r\n\r\n\r\n    const setLanguageHandler = lang => {\r\n        setLanguage(lang)\r\n        checkLanguage(lang)\r\n        localStorage.setItem('Language', lang)\r\n        \r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"lang-btn-wrapper\">\r\n            <div className=\"lang-btn\"  onMouseLeave={ () => setOptionList(false) }>\r\n                <div className='lang-btn__select-box' onClick={ () => setOptionList(!optionList) }>\r\n                <span className=\"lang-btn__current-language\">{language === 'en' ? 'En' : 'עב'}</span>\r\n                </div>\r\n\r\n                <ul className={`lang-btn__options-list ${optionList && 'lang-btn__options-list-on'}`}>\r\n                    <li className=\"lang-btn__option\"  \r\n                        onClick={ () => {\r\n                            setOptionList(false) \r\n                            setLanguageHandler('en')\r\n                        } }\r\n                    >En\r\n                    </li>\r\n\r\n                    <li className=\"lang-btn__option\"  \r\n                        onClick={ () => {\r\n                            setOptionList(false) \r\n                            setLanguageHandler('he')\r\n                        }}\r\n                    >עב\r\n                    </li>\r\n                    \r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LanguageButton\r\n"]},"metadata":{},"sourceType":"module"}