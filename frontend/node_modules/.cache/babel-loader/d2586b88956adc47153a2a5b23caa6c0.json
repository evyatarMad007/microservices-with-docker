{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\employee-managment-system\\\\frontend\\\\src\\\\screens\\\\AddEmployee.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Consumer } from '../context';\nimport { formValidationHandler } from '../utils/validate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddEmployee = ({\n  addEmployeeUnmount\n}, props) => {\n  _s();\n\n  // component Language \n  const [leng, setLeng] = useState(localStorage.getItem('Language') || 'en');\n  console.log();\n  useEffect(() => {\n    setLeng(props.lengNow);\n  }, [props.lengNow]); // form value & valid stats\n\n  const [firstName, setFirstName] = useState({});\n  const [lastName, setLastName] = useState({});\n  const [phone, setPhone] = useState({});\n  const [adress, setAdress] = useState({});\n  const [roll, setRoll] = useState({}); // general settings stats\n\n  const [firstNameLabel, setFirstNameLabel] = useState(true);\n  const [lastNameLabel, setLastNameLabel] = useState(true);\n  const [phoneLabel, setPhoneLabel] = useState(true);\n  const [adressLabel, setAdressLabel] = useState(true);\n  const [rollLabel, setRollLabel] = useState(true); // addEmployeeUnmount\n\n  const inputBlurHandler = (inp, value) => {\n    if (value.length === 0 || value === 'DEFAULT') {\n      if (inp === 'firstName') {\n        setFirstNameLabel(true);\n        if (firstName.error) setFirstName(firstName.error = '');\n      }\n\n      if (inp === 'lastName') {\n        setLastNameLabel(true);\n        if (lastName.error) setLastName(lastName.error = '');\n      }\n\n      if (inp === 'phone') {\n        setPhoneLabel(true);\n        if (phone.error) setPhone(phone.error = '');\n      }\n\n      if (inp === 'adress') {\n        setAdressLabel(true);\n        if (adress.error) setAdress(adress.error = '');\n      }\n\n      if (inp === 'roll') {\n        setRollLabel(true);\n        if (roll.error) setRoll(roll.error = '');\n      }\n    }\n  };\n\n  const validateHandler = (inp, value) => {\n    let setTheState;\n    const errorValidate = formValidationHandler(inp, value); // first Name: \n\n    if (inp === 'firstName') {\n      if (!errorValidate) {\n        setTheState = {\n          type: inp,\n          isValid: true,\n          value,\n          error: ''\n        };\n      } else {\n        setTheState = {\n          type: inp,\n          isValid: false,\n          value,\n          error: 'First name must contain only letters, min 2 max 20 characters'\n        };\n      }\n\n      setFirstName(setTheState);\n    } // last Name: \n\n\n    if (inp === 'lastName') {\n      if (!errorValidate) {\n        setTheState = {\n          type: inp,\n          isValid: true,\n          value,\n          error: errorValidate\n        };\n      } else {\n        setTheState = {\n          type: inp,\n          isValid: false,\n          value,\n          error: errorValidate\n        };\n      }\n\n      setLastName(setTheState);\n    } // phone: \n\n\n    if (inp === 'phone') {\n      if (!errorValidate) {\n        setTheState = {\n          type: inp,\n          isValid: true,\n          value,\n          error: errorValidate\n        };\n      } else {\n        setTheState = {\n          type: inp,\n          isValid: false,\n          value,\n          error: errorValidate\n        };\n      }\n\n      setPhone(setTheState);\n    } // adress: \n\n\n    if (inp === 'adress') {\n      if (!errorValidate) {\n        setTheState = {\n          type: inp,\n          isValid: true,\n          value,\n          error: errorValidate\n        };\n      } else {\n        setTheState = {\n          type: inp,\n          isValid: false,\n          value,\n          error: errorValidate\n        };\n      }\n\n      setAdress(setTheState);\n    } // roll\n\n\n    if (inp === 'roll') {\n      if (!errorValidate) {\n        setTheState = {\n          type: inp,\n          isValid: true,\n          value,\n          error: errorValidate\n        };\n      } else {\n        setTheState = {\n          type: inp,\n          isValid: false,\n          value,\n          error: errorValidate\n        };\n      }\n\n      setRoll(setTheState);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Consumer, {\n    children: context => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `add-employee add-employee-${leng} ${context.addEmployeeForm.displayed ? 'add-employee-on' : 'add-employee-off'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-employee__outline\",\n        onClick: () => {\n          context.setAddEmployeeForm({\n            displayed: false\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `add-employee__inline ${context.addEmployeeForm.displayed ? 'add-employee__inline-on' : 'add-employee__inline-off'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exit-btn\",\n          onClick: () => context.setAddEmployeeForm({\n            displayed: false\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"exit-icon fas fa-times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"arrow-icon fas fa-chevron-left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: e => {\n            e.preventDefault();\n\n            if (context.actions) {\n              context.actions.addEmployee({\n                firstName: firstName.value,\n                lastName: lastName.value,\n                phone: phone.value,\n                adress: adress.value,\n                roll: roll.value\n              });\n            }\n          },\n          autoComplete: \"off\",\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"form-title\",\n            children: leng === 'en' ? 'Add Employee' : 'הוסף עובד'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: firstNameLabel ? 'label-focus' : '',\n              htmlFor: \"firstName\",\n              children: leng === 'en' ? 'First Name' : 'שם פרטי'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onBlur: e => inputBlurHandler('firstName', e.target.value),\n              onFocus: () => setFirstNameLabel(false),\n              type: \"firstName\",\n              name: \"firstName\",\n              className: \"add-employee-firstName\",\n              onChange: e => validateHandler(\"firstName\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 37\n            }, this), firstName.error && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-valid\",\n              children: firstName.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: lastNameLabel ? 'label-focus' : '',\n              htmlFor: \"lastName\",\n              children: leng === 'en' ? 'Last Name' : 'שם משפחה'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onBlur: e => inputBlurHandler('lastName', e.target.value),\n              onFocus: () => setLastNameLabel(false),\n              type: \"text\",\n              name: \"lastName\",\n              className: \"add-employee-lastName\",\n              onChange: e => validateHandler(\"lastName\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 37\n            }, this), lastName.error && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-valid\",\n              children: lastName.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: phoneLabel ? 'label-focus' : '',\n              htmlFor: \"phone\",\n              children: leng === 'en' ? 'Phone' : 'טלפון'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onBlur: e => inputBlurHandler('phone', e.target.value),\n              onFocus: () => setPhoneLabel(false),\n              type: \"tel\",\n              name: \"phone\",\n              className: \"add-employee-phone\",\n              onChange: e => validateHandler(\"phone\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 37\n            }, this), phone.error && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-valid\",\n              children: phone.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: adressLabel ? 'label-focus' : '',\n              htmlFor: \"adress\",\n              children: leng === 'en' ? 'Adress' : 'כתובת'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onBlur: e => inputBlurHandler('adress', e.target.value),\n              onFocus: () => setAdressLabel(false),\n              type: \"text\",\n              name: \"adress\",\n              className: \"add-employee-adress\",\n              onChange: e => validateHandler(\"adress\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 37\n            }, this), adress.error && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-valid\",\n              children: adress.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: rollLabel ? 'label-focus' : '',\n              htmlFor: \"roll\",\n              children: leng === 'en' ? 'Roll' : 'תפקיד'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"roll-select add-employee-roll\",\n              name: \"roll\",\n              onBlur: e => inputBlurHandler('roll', e.target.value),\n              onFocus: () => setRollLabel(false),\n              onChange: e => validateHandler(\"roll\", e.target.value),\n              defaultValue: 'DEFAULT',\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                className: \"option\",\n                value: \"DEFAULT\",\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                className: \"option\",\n                value: \"HR\",\n                children: \"HR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                className: \"option\",\n                value: \"Developer\",\n                children: \"Developer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                className: \"option\",\n                value: \"Team Leader\",\n                children: \"Team Leader\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                className: \"option\",\n                value: \"Operation\",\n                children: \"Operation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                className: \"option\",\n                value: \"Devops\",\n                children: \"Devops\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 37\n            }, this), roll.error && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-valid\",\n              children: roll.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit\",\n              type: \"submit\",\n              disabled: firstName.isValid && lastName.isValid && phone.isValid && adress.isValid && roll.isValid ? false : true,\n              children: leng === 'en' ? 'Add' : 'הוסף'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddEmployee, \"39cH9CJ6pIikeqW6QYBH6v6+zlc=\");\n\n_c = AddEmployee;\nexport default AddEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEmployee\");","map":{"version":3,"sources":["C:/GitHub/employee-managment-system/frontend/src/screens/AddEmployee.jsx"],"names":["React","useState","useEffect","Consumer","formValidationHandler","AddEmployee","addEmployeeUnmount","props","leng","setLeng","localStorage","getItem","console","log","lengNow","firstName","setFirstName","lastName","setLastName","phone","setPhone","adress","setAdress","roll","setRoll","firstNameLabel","setFirstNameLabel","lastNameLabel","setLastNameLabel","phoneLabel","setPhoneLabel","adressLabel","setAdressLabel","rollLabel","setRollLabel","inputBlurHandler","inp","value","length","error","validateHandler","setTheState","errorValidate","type","isValid","context","addEmployeeForm","displayed","setAddEmployeeForm","e","preventDefault","actions","addEmployee","target"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { Consumer } from '../context'\r\nimport { formValidationHandler } from '../utils/validate'\r\n\r\n\r\nconst AddEmployee = ({addEmployeeUnmount},props) => {\r\n\r\n    // component Language \r\n    const [leng, setLeng] = useState(localStorage.getItem('Language') || 'en')\r\n\r\n    console.log();\r\n    useEffect(() => {\r\n        setLeng(props.lengNow)\r\n    }, [props.lengNow])\r\n\r\n    // form value & valid stats\r\n    const [firstName, setFirstName] = useState({})\r\n    const [lastName, setLastName] = useState({})\r\n    const [phone, setPhone] = useState({})\r\n    const [adress, setAdress] = useState({})\r\n    const [roll, setRoll] = useState({})\r\n\r\n    // general settings stats\r\n    const [firstNameLabel, setFirstNameLabel] = useState(true)\r\n    const [lastNameLabel, setLastNameLabel] = useState(true)\r\n    const [phoneLabel, setPhoneLabel] = useState(true)\r\n    const [adressLabel, setAdressLabel] = useState(true)\r\n    const [rollLabel, setRollLabel] = useState(true)\r\n\r\n    // addEmployeeUnmount\r\n    const inputBlurHandler = (inp,value) => {\r\n        if( value.length === 0 || value === 'DEFAULT') {\r\n\r\n            if(inp === 'firstName') {\r\n                setFirstNameLabel(true)\r\n                if(firstName.error) setFirstName(firstName.error = '')\r\n            }\r\n            if(inp === 'lastName') {\r\n                setLastNameLabel(true)\r\n                if(lastName.error) setLastName(lastName.error = '')\r\n            }\r\n            if(inp === 'phone') {\r\n                setPhoneLabel(true)\r\n                if(phone.error) setPhone(phone.error = '')\r\n            }\r\n            if(inp === 'adress') {\r\n                setAdressLabel(true)\r\n                if(adress.error) setAdress(adress.error = '')\r\n            }\r\n            if(inp === 'roll') {\r\n            setRollLabel(true)\r\n            if(roll.error) setRoll(roll.error = '')\r\n            }\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    const validateHandler = (inp, value) => {\r\n        let setTheState;\r\n        const errorValidate = formValidationHandler(inp, value);\r\n        // first Name: \r\n        if( inp === 'firstName' ) {\r\n            if(!errorValidate) {\r\n                setTheState = { type: inp, isValid: true, value, error: ''}\r\n            } else {\r\n                setTheState = { type: inp, isValid: false, value, error: 'First name must contain only letters, min 2 max 20 characters' }\r\n            }\r\n            setFirstName(setTheState)\r\n        }\r\n        // last Name: \r\n        if( inp === 'lastName' ) {\r\n            if(!errorValidate) {\r\n                setTheState = { type: inp, isValid: true, value, error: errorValidate}\r\n            } else {\r\n                setTheState = { type: inp, isValid: false, value, error: errorValidate }\r\n            }\r\n            setLastName(setTheState)\r\n        }\r\n        // phone: \r\n        if( inp === 'phone' ) {\r\n            if(!errorValidate) {\r\n                setTheState = { type: inp, isValid: true, value, error: errorValidate}\r\n            } else {\r\n                setTheState = { type: inp, isValid: false, value, error: errorValidate }\r\n            }\r\n            setPhone(setTheState)\r\n        }\r\n        // adress: \r\n        if( inp === 'adress' ) {\r\n            if(! errorValidate) {\r\n                setTheState = { type: inp, isValid: true, value, error: errorValidate}\r\n            } else {\r\n                setTheState = { type: inp, isValid: false, value, error: errorValidate }\r\n            }\r\n            setAdress(setTheState)\r\n        }\r\n        // roll\r\n        if( inp === 'roll' ) {\r\n            if(! errorValidate ) {\r\n                setTheState = { type: inp, isValid: true, value, error: errorValidate}\r\n            } else {\r\n                setTheState = { type: inp, isValid: false, value, error: errorValidate }\r\n            }\r\n            setRoll(setTheState)\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    return (\r\n        <Consumer>\r\n            {\r\n                    \r\n\r\n                context => \r\n\r\n                    (\r\n                        \r\n                    <div className={`add-employee add-employee-${leng} ${context.addEmployeeForm.displayed  ? 'add-employee-on' : 'add-employee-off'}`}>\r\n                        <div className=\"add-employee__outline\" \r\n                             onClick={ () => {\r\n                                 context.setAddEmployeeForm({ displayed: false})\r\n\r\n                             }}\r\n                        >\r\n                        </div>\r\n                        \r\n                        <div className={`add-employee__inline ${context.addEmployeeForm.displayed ? 'add-employee__inline-on' : 'add-employee__inline-off'}`}>\r\n                                \r\n                        <div className=\"exit-btn\" onClick={ () => context.setAddEmployeeForm({ displayed: false})}>\r\n                            <i className=\"exit-icon fas fa-times\"></i>\r\n                            <i className=\"arrow-icon fas fa-chevron-left\"></i>\r\n                            </div>\r\n                            <form className=\"form\"\r\n                                onSubmit={ (e) =>  {\r\n                                    e.preventDefault()\r\n                                    if(context.actions) {\r\n                                        context.actions.addEmployee(\r\n                                            {\r\n                                                firstName: firstName.value,\r\n                                                lastName: lastName.value,\r\n                                                phone: phone.value,\r\n                                                adress: adress.value,\r\n                                                roll: roll.value,\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                    \r\n                                }} \r\n                                autoComplete=\"off\" noValidate\r\n                            >\r\n                                <span className=\"form-title\">{ leng === 'en' ? 'Add Employee' : 'הוסף עובד' }</span>\r\n\r\n                                    <div className=\"input-wrapper\">\r\n                                    <label className={firstNameLabel ? 'label-focus' : ''} htmlFor=\"firstName\">{ leng === 'en' ? 'First Name' : 'שם פרטי' }</label>\r\n                                    <input \r\n                                        onBlur={ (e) => inputBlurHandler('firstName',e.target.value)}  \r\n                                        onFocus={ () => setFirstNameLabel(false)} type=\"firstName\" name=\"firstName\" \r\n                                        className=\"add-employee-firstName\"\r\n                                        onChange={ e => validateHandler(\"firstName\", e.target.value)} \r\n                                    />\r\n                                    {firstName.error && <span className=\"error-valid\">{firstName.error}</span>}\r\n                                </div>\r\n                        \r\n                                <div className=\"input-wrapper\">\r\n                                    <label className={lastNameLabel ? 'label-focus' : ''} htmlFor=\"lastName\">{ leng === 'en' ? 'Last Name' : 'שם משפחה' }</label>\r\n                                    <input \r\n                                        onBlur={ (e) => inputBlurHandler('lastName',e.target.value)} \r\n                                        onFocus={ () => setLastNameLabel(false)} \r\n                                        type=\"text\" name=\"lastName\" \r\n                                        className=\"add-employee-lastName\"\r\n                                        onChange={ e => validateHandler(\"lastName\", e.target.value)} \r\n                                    />\r\n                                    {lastName.error && <span className=\"error-valid\">{lastName.error}</span>}\r\n                                </div>\r\n\r\n                                <div className=\"input-wrapper\">\r\n                                    <label className={phoneLabel ? 'label-focus' : ''} htmlFor=\"phone\">{ leng === 'en' ? 'Phone' : 'טלפון' }</label>\r\n                                    <input \r\n                                        onBlur={ (e) => inputBlurHandler('phone',e.target.value)} \r\n                                        onFocus={ () => setPhoneLabel(false)} \r\n                                        type=\"tel\" name=\"phone\" \r\n                                        className=\"add-employee-phone\"\r\n                                        onChange={ e => validateHandler(\"phone\", e.target.value)} \r\n                                    />\r\n                                    {phone.error && <span className=\"error-valid\">{phone.error}</span>}\r\n                                </div>\r\n\r\n                                <div className=\"input-wrapper\">\r\n                                    <label className={adressLabel ? 'label-focus' : ''} htmlFor=\"adress\">{ leng === 'en' ? 'Adress' : 'כתובת' }</label>\r\n                                    <input \r\n                                        onBlur={ (e) => inputBlurHandler('adress',e.target.value)} \r\n                                        onFocus={ () => setAdressLabel(false)} \r\n                                        type=\"text\" name=\"adress\"\r\n                                        className=\"add-employee-adress\"\r\n                                        onChange={ e => validateHandler(\"adress\", e.target.value)} \r\n                                    />\r\n                                    {adress.error && <span className=\"error-valid\">{adress.error}</span>}\r\n                                </div>\r\n\r\n                                <div className=\"input-wrapper\">\r\n                                    <label className={rollLabel ? 'label-focus' : ''} htmlFor=\"roll\">{ leng === 'en' ? 'Roll' : 'תפקיד' }</label>\r\n                                    <select \r\n                                        className=\"roll-select add-employee-roll\" name=\"roll\"\r\n                                        onBlur={ (e) => inputBlurHandler('roll',e.target.value)}\r\n                                        onFocus={ () => setRollLabel(false)} \r\n                                        onChange={ e => validateHandler(\"roll\", e.target.value)}\r\n                                        defaultValue={'DEFAULT'}\r\n                                        >\r\n\r\n                                            <option className=\"option\"  value=\"DEFAULT\" disabled></option>\r\n                                            <option className=\"option\"  value=\"HR\">HR</option>\r\n                                            <option className=\"option\"  value=\"Developer\">Developer</option>\r\n                                            <option className=\"option\"  value=\"Team Leader\">Team Leader</option>\r\n                                            <option className=\"option\"  value=\"Operation\">Operation</option>\r\n                                            <option className=\"option\"  value=\"Devops\">Devops</option>\r\n                                    </select>\r\n                                    {roll.error && <span className=\"error-valid\">{roll.error}</span>}\r\n                                </div>\r\n\r\n                            \r\n                                <div className=\"button-wrapper\">\r\n                                    <button \r\n                                        className=\"submit\" \r\n                                        type=\"submit\" \r\n                                        disabled={ firstName.isValid && lastName.isValid  && phone.isValid && adress.isValid && roll.isValid \r\n                                            ? false \r\n                                            : true\r\n                                        }\r\n                                        >{ leng === 'en' ? 'Add' : 'הוסף' }\r\n                                    </button> \r\n                                </div>\r\n                                \r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                \r\n            \r\n            }\r\n        </Consumer>\r\n    )\r\n}\r\n\r\nexport default AddEmployee\r\n"]},"metadata":{},"sourceType":"module"}