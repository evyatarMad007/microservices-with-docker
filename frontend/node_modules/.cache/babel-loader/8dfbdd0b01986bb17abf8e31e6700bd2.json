{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\employee-managment-system\\\\frontend\\\\src\\\\screens\\\\ForgotPassword.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport PageHeader from '../components/PageHeader';\nimport LanguageButton from '../components/LanguageButton';\nimport personImg from '../images/sign-in-img.png';\nimport { formValidationHandler } from '../utils/validate';\nimport { getCurrentUser } from '../services/userService';\nimport { sendResetPassToEmail } from '../services/userHelperService';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgotPassword = () => {\n  _s();\n\n  // component Language \n  const [leng, setLeng] = useState(localStorage.getItem('Language') || 'en');\n\n  const checkLanguage = lengProps => {\n    setLeng(lengProps);\n  }; // form value & valid stats\n\n\n  const [email, setEmail] = useState({}); // general settings stats\n\n  const [emailLabel, setEmailLabel] = useState(true);\n\n  const inputBlurHandler = (inp, value) => {\n    if (value.length === 0 || value === 'DEFAULT') {\n      if (inp === 'email') {\n        setEmailLabel(true); // if(email.error) setEmail(email.error = '')\n      }\n    }\n  };\n\n  const validateHandler = (inp, value) => {\n    let setTheState;\n    const errorValidate = formValidationHandler(inp, value); // email: \n\n    if (inp === 'email') {\n      if (!errorValidate) {\n        setTheState = {\n          type: inp,\n          isValid: true,\n          value,\n          error: errorValidate\n        };\n      } else {\n        setTheState = {\n          type: inp,\n          isValid: false,\n          value,\n          error: errorValidate\n        };\n      }\n\n      setEmail(setTheState);\n    }\n  };\n\n  if (getCurrentUser()) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 35\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `forgot-password  forgot-password-${leng}`,\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      children: leng === 'en' ? 'enter your email address' : 'נא הזן את כתובת האימייל שלך'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(LanguageButton, {\n      checkLanguage: checkLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"forgot-password__form\",\n      onSubmit: e => {\n        e.preventDefault();\n        sendResetPassToEmail(email.value).then(res => {\n          console.log('res', res);\n\n          if (res === 'OK') {\n            // success \n            if (localStorage.getItem('Language') === 'en') toast.info(`We will email you a password reset link`);\n            if (localStorage.getItem('Language') === 'he') toast.info(`נשלח אליך למייל קישור לאיפוס סיסמה`);\n          }\n\n          if (res === 'Sending Failed') {\n            // faild - Sending Failed \n            if (localStorage.getItem('Language') === 'en') toast.error(`Sending Failed`);\n            if (localStorage.getItem('Language') === 'he') toast.error(`השליחה נכשלה`);\n          }\n\n          if (res === 'Email Not exist') {\n            // faild - Email Not exist\n            if (localStorage.getItem('Language') === 'en') toast.error(res);\n            if (localStorage.getItem('Language') === 'he') toast.error('כתובת אימייל לא קיימת במאגר');\n          }\n        });\n      },\n      autoComplete: \"off\",\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"person-img-box\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"person-img\",\n          src: personImg,\n          alt: \"person-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: emailLabel ? 'label-focus' : '',\n          htmlFor: \"email\",\n          children: leng === 'en' ? 'Email' : 'אימייל'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onBlur: e => inputBlurHandler('email', e.target.value),\n          onFocus: () => setEmailLabel(false),\n          type: \"email\",\n          name: \"email\",\n          onChange: e => validateHandler(\"email\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 33\n        }, this), email.error && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-valid\",\n          children: leng === 'en' ? `${email.error}` : `האימייל אינו חוקי: חייב להכיל פורמט דוא\"ל.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit\",\n            type: \"submit\",\n            disabled: email.isValid ? false : true,\n            children: leng === 'en' ? 'Send me a reset password link' : 'שלח לי לינק לאיפוס סיסמה'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Link, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ForgotPassword, \"Td3GPh7q/T5g4Wa5HxFuYHjrETk=\");\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["C:/GitHub/employee-managment-system/frontend/src/screens/ForgotPassword.jsx"],"names":["React","useState","Link","Redirect","PageHeader","LanguageButton","personImg","formValidationHandler","getCurrentUser","sendResetPassToEmail","toast","ForgotPassword","leng","setLeng","localStorage","getItem","checkLanguage","lengProps","email","setEmail","emailLabel","setEmailLabel","inputBlurHandler","inp","value","length","validateHandler","setTheState","errorValidate","type","isValid","error","e","preventDefault","then","res","console","log","info","target"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport PageHeader from '../components/PageHeader'\r\nimport LanguageButton from '../components/LanguageButton'\r\nimport personImg from '../images/sign-in-img.png'\r\nimport {formValidationHandler} from '../utils/validate'\r\nimport {getCurrentUser} from '../services/userService'\r\nimport {sendResetPassToEmail} from '../services/userHelperService'\r\nimport {toast} from 'react-toastify'\r\n\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    // component Language \r\n    const [leng, setLeng] = useState(localStorage.getItem('Language') || 'en')\r\n\r\n    const checkLanguage = (lengProps) => {\r\n        setLeng(lengProps)\r\n    }\r\n\r\n    // form value & valid stats\r\n    const [email, setEmail] = useState({})\r\n\r\n     // general settings stats\r\n    const [emailLabel, setEmailLabel] = useState(true)\r\n\r\n    const inputBlurHandler = (inp,value) => {\r\n        if( value.length === 0 || value === 'DEFAULT') {\r\n            if(inp === 'email') {\r\n                setEmailLabel(true)\r\n                // if(email.error) setEmail(email.error = '')\r\n            }\r\n        }\r\n    }\r\n\r\n    const validateHandler = (inp, value) => {\r\n        let setTheState;\r\n        const errorValidate = formValidationHandler(inp, value);\r\n\r\n        // email: \r\n        if( inp === 'email' ) {\r\n            if(! errorValidate) {\r\n                setTheState = { type: inp, isValid: true, value, error: errorValidate}\r\n            } else {\r\n                setTheState = { type: inp, isValid: false, value, error: errorValidate}\r\n            }\r\n            setEmail(setTheState)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    if( getCurrentUser() ) return <Redirect to=\"/\"/>   \r\n\r\n    return (\r\n        <div className={`forgot-password  forgot-password-${leng}`}>\r\n                        <PageHeader>{ leng === 'en' ? 'enter your email address' : 'נא הזן את כתובת האימייל שלך' }</PageHeader>\r\n\r\n                        <LanguageButton checkLanguage={checkLanguage} />\r\n\r\n                        <form \r\n                            className=\"forgot-password__form\" \r\n                            onSubmit={ (e) =>  {\r\n                                e.preventDefault()\r\n                                    sendResetPassToEmail(email.value)\r\n                                    .then( res => {\r\n                                        console.log('res',res)\r\n                                        if( res === 'OK') {\r\n                                            // success \r\n                                            if( localStorage.getItem('Language') === 'en' )  toast.info(`We will email you a password reset link`)\r\n                                            if( localStorage.getItem('Language') === 'he' )  toast.info(`נשלח אליך למייל קישור לאיפוס סיסמה`)\r\n                                        }\r\n                                        if( res === 'Sending Failed') {\r\n                                            // faild - Sending Failed \r\n                                            if( localStorage.getItem('Language') === 'en' )  toast.error(`Sending Failed`)\r\n                                            if( localStorage.getItem('Language') === 'he' )  toast.error(`השליחה נכשלה`)\r\n                                        }\r\n                                        if( res === 'Email Not exist') {\r\n                                            // faild - Email Not exist\r\n                                            if( localStorage.getItem('Language') === 'en' )  toast.error(res)\r\n                                            if( localStorage.getItem('Language') === 'he' )  toast.error('כתובת אימייל לא קיימת במאגר')\r\n                                        } \r\n                                        \r\n                                    })\r\n                                \r\n                            }}\r\n                            autoComplete=\"off\" noValidate\r\n                        >\r\n                            <div className=\"person-img-box\">\r\n                                <img className=\"person-img\" src={personImg} alt=\"person-img\" />\r\n                            </div>\r\n                            \r\n                            <div className=\"input-wrapper\">\r\n                                <label className={emailLabel ? 'label-focus' : ''} \r\n                                    htmlFor=\"email\"\r\n                                >{ leng === 'en' ? 'Email' : 'אימייל' }\r\n                                </label>\r\n                                <input \r\n                                    onBlur={ (e) => inputBlurHandler('email',e.target.value)} \r\n                                    onFocus={ () => setEmailLabel(false)} \r\n                                    type=\"email\" name=\"email\" \r\n                                    onChange={ e => validateHandler(\"email\", e.target.value)} \r\n                                />\r\n                                {email.error \r\n                                    && \r\n                                    <span \r\n                                        className=\"error-valid\"\r\n                                    >{ leng === 'en' ? `${email.error}` : `האימייל אינו חוקי: חייב להכיל פורמט דוא\"ל.` }\r\n                                    </span>}\r\n                            </div>\r\n\r\n                            <div className=\"form-bottom\">\r\n                                <div className=\"button-wrapper\">\r\n                                    <button \r\n                                        className=\"submit\" \r\n                                        type=\"submit\" \r\n                                        disabled={email.isValid ? false : true }\r\n                                        >{ leng === 'en' ? 'Send me a reset password link' : 'שלח לי לינק לאיפוס סיסמה' }\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        <Link></Link>\r\n                    </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n"]},"metadata":{},"sourceType":"module"}