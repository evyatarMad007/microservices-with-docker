{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\employee-managment-system\\\\frontend\\\\src\\\\screens\\\\SignInScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport PageHeader from '../components/PageHeader';\nimport LanguageButton from '../components/LanguageButton';\nimport personImg from '../images/sign-in-img.png';\nimport UserInquiry from '../components/UserInquiry';\nimport { formValidationHandler } from '../utils/validate';\nimport { getCurrentUser } from '../services/userService';\nimport { Consumer } from '../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nUserInquiry;\n\nconst SignInScreen = () => {\n  _s();\n\n  // component Language \n  const [leng, setLeng] = useState(localStorage.getItem('Language') || 'en');\n\n  const checkLanguage = lengProps => {\n    setLeng(lengProps);\n  }; // form value & valid stats\n\n\n  const [password, setPassword] = useState({});\n  const [email, setEmail] = useState({}); // general settings stats\n\n  const [emailLabel, setEmailLabel] = useState(true);\n  const [passwordLabel, setPasswordLabel] = useState(true);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const inputBlurHandler = (inp, value) => {\n    if (value.length === 0 || value === 'DEFAULT') {\n      if (inp === 'email') {\n        setEmailLabel(true); // if(email.error) setEmail(email.error = '')\n      }\n\n      if (inp === 'password') {\n        setPasswordLabel(true); // if(password.error) setPassword(password.error = '')\n      }\n    }\n  };\n\n  const validateHandler = (inp, value) => {\n    let setTheState;\n    const errorValidate = formValidationHandler(inp, value); // email: \n\n    if (inp === 'email') {\n      if (!errorValidate) {\n        setTheState = {\n          type: inp,\n          isValid: true,\n          value,\n          error: errorValidate\n        };\n      } else {\n        setTheState = {\n          type: inp,\n          isValid: false,\n          value,\n          error: errorValidate\n        };\n      }\n\n      setEmail(setTheState);\n    } // password: \n\n\n    if (inp === 'password') {\n      if (!errorValidate) {\n        setTheState = {\n          type: inp,\n          isValid: true,\n          value,\n          error: errorValidate\n        };\n      } else {\n        setTheState = {\n          type: inp,\n          isValid: false,\n          value,\n          error: errorValidate\n        };\n      }\n\n      setPassword(setTheState);\n    }\n  };\n\n  if (getCurrentUser()) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 35\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Consumer, {\n    children: context => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sign-in  sign-in-${leng}`,\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        children: leng === 'en' ? 'Sign In' : 'התחברות'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(LanguageButton, {\n        checkLanguage: checkLanguage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"sign-in__form\",\n        onSubmit: e => {\n          e.preventDefault();\n\n          if (context.actions.userSignIn) {\n            context.actions.userSignIn({\n              email: email.value,\n              password: password.value\n            });\n          }\n        },\n        autoComplete: \"off\",\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"person-img-box\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"person-img\",\n            src: personImg,\n            alt: \"person-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: emailLabel ? 'label-focus' : '',\n            htmlFor: \"email\",\n            children: leng === 'en' ? 'Email' : 'אימייל'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onBlur: e => inputBlurHandler('email', e.target.value),\n            onFocus: () => setEmailLabel(false),\n            type: \"email\",\n            name: \"email\",\n            onChange: e => validateHandler(\"email\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this), email.error && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-valid\",\n            children: leng === 'en' ? `${email.error}` : `האימייל אינו חוקי: חייב להכיל פורמט דוא\"ל.`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: passwordLabel ? 'label-focus' : '',\n            htmlFor: \"password\",\n            children: leng === 'en' ? 'Password' : 'סיסמה'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onBlur: e => inputBlurHandler('password', e.target.value),\n            onFocus: () => setPasswordLabel(false),\n            type: showPassword ? 'text' : 'password',\n            autoComplete: \"on\",\n            name: \"password\",\n            onChange: e => validateHandler(\"password\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this), password.error && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-valid\",\n            children: leng === 'en' ? `${password.error}` : `הסיסמה חייבת להיות: 6-20 תווים, אותיות גדולות וקטנות באנגלית ומספר`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 52\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"show-password\",\n            onClick: () => setShowPassword(!showPassword),\n            children: showPassword ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-eye-slash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 53\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-eye\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 92\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit\",\n              type: \"submit\",\n              disabled: password.isValid && email.isValid ? false : true,\n              children: leng === 'en' ? 'Sign In' : 'התחבר'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"link-forgot-pass\",\n            to: \"/forgot-password\",\n            children: leng === 'en' ? 'Forgot password?' : 'שכחת את הסיסמה?'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(UserInquiry, {\n        question: leng === 'en' ? `Don't have an account?` : 'אין לך עדיין חשבון?',\n        path: \"sign-up\",\n        linkText: leng === 'en' ? 'Sign Up' : 'הירשם'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignInScreen, \"GcxE+wh13DVIDJ288EXxz8ojS1k=\");\n\n_c = SignInScreen;\nexport default SignInScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInScreen\");","map":{"version":3,"sources":["C:/GitHub/employee-managment-system/frontend/src/screens/SignInScreen.jsx"],"names":["React","useState","Link","Redirect","PageHeader","LanguageButton","personImg","UserInquiry","formValidationHandler","getCurrentUser","Consumer","SignInScreen","leng","setLeng","localStorage","getItem","checkLanguage","lengProps","password","setPassword","email","setEmail","emailLabel","setEmailLabel","passwordLabel","setPasswordLabel","showPassword","setShowPassword","inputBlurHandler","inp","value","length","validateHandler","setTheState","errorValidate","type","isValid","error","context","e","preventDefault","actions","userSignIn","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport PageHeader from '../components/PageHeader'\r\nimport LanguageButton from '../components/LanguageButton'\r\nimport personImg from '../images/sign-in-img.png'\r\nimport UserInquiry from '../components/UserInquiry'\r\nimport {formValidationHandler} from '../utils/validate'\r\nimport {getCurrentUser} from '../services/userService'\r\nimport { Consumer } from '../context'\r\nUserInquiry\r\n\r\nconst SignInScreen = () => {\r\n\r\n    // component Language \r\n    const [leng, setLeng] = useState(localStorage.getItem('Language') || 'en')\r\n\r\n    const checkLanguage = (lengProps) => {\r\n        setLeng(lengProps)\r\n    }\r\n\r\n    // form value & valid stats\r\n    const [password, setPassword] = useState({})\r\n    const [email, setEmail] = useState({})\r\n\r\n     // general settings stats\r\n    const [emailLabel, setEmailLabel] = useState(true)\r\n    const [passwordLabel, setPasswordLabel] = useState(true)\r\n    const [showPassword, setShowPassword] = useState(false)\r\n\r\n    const inputBlurHandler = (inp,value) => {\r\n        if( value.length === 0 || value === 'DEFAULT') {\r\n            if(inp === 'email') {\r\n                setEmailLabel(true)\r\n                // if(email.error) setEmail(email.error = '')\r\n            }\r\n            if(inp === 'password'){ \r\n                setPasswordLabel(true)\r\n                // if(password.error) setPassword(password.error = '')\r\n            }\r\n        }\r\n    }\r\n\r\n    const validateHandler = (inp, value) => {\r\n        let setTheState;\r\n        const errorValidate = formValidationHandler(inp, value);\r\n\r\n        // email: \r\n        if( inp === 'email' ) {\r\n            if(! errorValidate) {\r\n                setTheState = { type: inp, isValid: true, value, error: errorValidate}\r\n            } else {\r\n                setTheState = { type: inp, isValid: false, value, error: errorValidate}\r\n            }\r\n            setEmail(setTheState)\r\n        }\r\n        \r\n        // password: \r\n        if( inp === 'password' ) {\r\n            if(! errorValidate) {\r\n                setTheState = { type: inp, isValid: true, value, error: errorValidate}\r\n                \r\n            }  else {\r\n                setTheState = { type: inp, isValid: false, value, error: errorValidate }\r\n            }\r\n            setPassword(setTheState)\r\n        } \r\n    }\r\n\r\n\r\n\r\n    if( getCurrentUser() ) return <Redirect to=\"/\"/>   \r\n\r\n    return (\r\n        <Consumer>\r\n            {\r\n                context => (\r\n                    <div className={`sign-in  sign-in-${leng}`}>\r\n                        <PageHeader>{ leng === 'en' ? 'Sign In' : 'התחברות' }</PageHeader>\r\n\r\n                        <LanguageButton checkLanguage={checkLanguage} />\r\n\r\n                        <form \r\n                            className=\"sign-in__form\" \r\n                            onSubmit={ (e) =>  {\r\n                                e.preventDefault()\r\n                                if(context.actions.userSignIn) {\r\n                                    context.actions.userSignIn(\r\n                                        {\r\n                                            email: email.value,\r\n                                            password: password.value\r\n                                        }\r\n                                    )\r\n                                }\r\n                                \r\n                            }}\r\n                            autoComplete=\"off\" noValidate\r\n                        >\r\n                            <div className=\"person-img-box\">\r\n                                <img className=\"person-img\" src={personImg} alt=\"person-img\" />\r\n                            </div>\r\n                            \r\n                            <div className=\"input-wrapper\">\r\n                                <label className={emailLabel ? 'label-focus' : ''} htmlFor=\"email\">{ leng === 'en' ? 'Email' : 'אימייל' }</label>\r\n                                <input \r\n                                    onBlur={ (e) => inputBlurHandler('email',e.target.value)} \r\n                                    onFocus={ () => setEmailLabel(false)} \r\n                                    type=\"email\" name=\"email\" \r\n                                    onChange={ e => validateHandler(\"email\", e.target.value)} \r\n                                />\r\n                                {email.error && <span className=\"error-valid\">{ leng === 'en' ? `${email.error}` : `האימייל אינו חוקי: חייב להכיל פורמט דוא\"ל.` }</span>}\r\n                            </div>\r\n\r\n                            <div className=\"input-wrapper\">\r\n                                <label className={passwordLabel ? 'label-focus' : ''} htmlFor=\"password\">{ leng === 'en' ? 'Password' : 'סיסמה' }</label>\r\n                                <input \r\n                                    onBlur={ (e) => inputBlurHandler('password',e.target.value)} \r\n                                    onFocus={ () => setPasswordLabel(false)} \r\n                                    type={ showPassword ? 'text' : 'password'}  \r\n                                    autoComplete=\"on\" name=\"password\" \r\n                                    onChange={ e => validateHandler(\"password\",e.target.value)} \r\n                                />\r\n                                {password.error && <span className=\"error-valid\">{ leng === 'en' ? `${password.error}` : `הסיסמה חייבת להיות: 6-20 תווים, אותיות גדולות וקטנות באנגלית ומספר` }</span>}\r\n                                <span className=\"show-password\" onClick={ () => setShowPassword( ! showPassword )}>\r\n                                    {showPassword ? <i className=\"far fa-eye-slash\"></i> : <i className=\"far fa-eye\"></i>}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div className=\"form-bottom\">\r\n                            <div className=\"button-wrapper\">\r\n                            <button className=\"submit\" type=\"submit\" disabled={password.isValid && email.isValid ? false : true }>{ leng === 'en' ? 'Sign In' : 'התחבר' }</button>\r\n                            </div>\r\n                            \r\n                            <Link \r\n                                className=\"link-forgot-pass\" \r\n                                to=\"/forgot-password\"\r\n                            >{ leng === 'en' ? 'Forgot password?' : 'שכחת את הסיסמה?' }\r\n                            </Link>\r\n                            </div>\r\n                        </form>\r\n                        <UserInquiry question={ leng === 'en' ? `Don't have an account?` : 'אין לך עדיין חשבון?' } path=\"sign-up\" linkText={ leng === 'en' ? 'Sign Up' : 'הירשם' } />\r\n                        \r\n                    </div>\r\n                )\r\n            }\r\n        </Consumer>\r\n    )\r\n}\r\n\r\nexport default SignInScreen"]},"metadata":{},"sourceType":"module"}