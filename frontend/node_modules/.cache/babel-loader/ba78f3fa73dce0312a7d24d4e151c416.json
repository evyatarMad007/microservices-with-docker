{"ast":null,"code":"import axios from 'axios';\nimport { apiUrl, headers } from \"../config/config\";\nimport { toast } from \"react-toastify\"; // --------------- Admin Privileges ----------------\n// @desc    get all users\n// @route   [GET] /api/users/get-all-users\n// @access  Admin.\n// @payload [no payload]\n\nexport async function getAllUsers() {\n  try {\n    // get all users\n    const {\n      data\n    } = await axios.get(`${apiUrl}/api/users/get-all-users`, {\n      headers\n    }); // return all data outside \n\n    return data;\n  } catch (err) {\n    if (err.response) {\n      return err.response.data.message;\n    }\n  }\n} // @desc    set user permissions (basic (only view), Editor , Admin)\n// @route   [GET] /api/users/user-permissions\n// @access  Admin.\n// @payload {userEmail, userAuth}\n\nexport async function userPermissions(userEmail, userAuth) {\n  const user = {\n    userEmail,\n    userAuth\n  };\n\n  try {\n    // send userEmail, userAuth\n    const {\n      data\n    } = await axios.put(`${apiUrl}/api/users/user-permissions`, user, {\n      headers\n    }); // return all data outside.\n\n    return data;\n  } catch (err) {\n    if (err.response) {\n      return err.response.data.message;\n    }\n  }\n} // @desc    get a single user.\n// @route   [GET] /api/users/:id\n// @access  Admin.\n// @payload \n// @desc    create user.\n// @route   [POST] /api/users/createUser\n// @access  Admin.\n// @payload \n// @desc    update user.\n// @route   [PUT] /api/users/updateUser\n// @access  Admin.\n// @payload \n// @desc    remove user.\n// @route   [DELETE] /api/users/deleteUser\n// @access  Admin.\n// @payload \n\nconst userMethods = {\n  getAllUsers,\n  userPermissions\n};\nexport default userMethods;","map":{"version":3,"sources":["C:/GitHub/employee-managment-system/frontend/src/services/AdminService.js"],"names":["axios","apiUrl","headers","toast","getAllUsers","data","get","err","response","message","userPermissions","userEmail","userAuth","user","put","userMethods"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,kBAAhC;AACA,SAASC,KAAT,QAAsB,gBAAtB,C,CAIA;AAEA;AACA;AACA;AACA;;AACA,OAAO,eAAeC,WAAf,GAA6B;AAEhC,MAAI;AACA;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,GAAN,CAClB,GAAEL,MAAO,0BADS,EAEnB;AAACC,MAAAA;AAAD,KAFmB,CAAvB,CAFA,CAOA;;AACA,WAAOG,IAAP;AAEH,GAVD,CAUG,OAAOE,GAAP,EAAY;AACX,QAAIA,GAAG,CAACC,QAAR,EAAmB;AACf,aAAOD,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,OAAzB;AACH;AACJ;AACJ,C,CAGD;AACA;AACA;AACA;;AACA,OAAO,eAAeC,eAAf,CAA+BC,SAA/B,EAA0CC,QAA1C,EAAmD;AAEtD,QAAMC,IAAI,GAAG;AAACF,IAAAA,SAAD;AAAWC,IAAAA;AAAX,GAAb;;AACA,MAAI;AAEA;AACA,UAAM;AAAEP,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACc,GAAN,CAClB,GAAEb,MAAO,6BADS,EAEnBY,IAFmB,EAGnB;AAACX,MAAAA;AAAD,KAHmB,CAAvB,CAHA,CASA;;AACA,WAAOG,IAAP;AAGH,GAbD,CAaG,OAAOE,GAAP,EAAY;AACX,QAAIA,GAAG,CAACC,QAAR,EAAmB;AACf,aAAOD,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,OAAzB;AACH;AACJ;AACJ,C,CAGD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAGA,MAAMM,WAAW,GAAG;AAChBX,EAAAA,WADgB;AAEhBM,EAAAA;AAFgB,CAApB;AAKA,eAAeK,WAAf","sourcesContent":["import axios from 'axios'\r\nimport { apiUrl, headers } from \"../config/config\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\n\r\n// --------------- Admin Privileges ----------------\r\n\r\n// @desc    get all users\r\n// @route   [GET] /api/users/get-all-users\r\n// @access  Admin.\r\n// @payload [no payload]\r\nexport async function getAllUsers() {\r\n\r\n    try {\r\n        // get all users\r\n        const { data } = await axios.get(\r\n            `${apiUrl}/api/users/get-all-users`,\r\n            {headers}\r\n        )\r\n\r\n        // return all data outside \r\n        return data \r\n            \r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// @desc    set user permissions (basic (only view), Editor , Admin)\r\n// @route   [GET] /api/users/user-permissions\r\n// @access  Admin.\r\n// @payload {userEmail, userAuth}\r\nexport async function userPermissions(userEmail, userAuth){\r\n    \r\n    const user = {userEmail,userAuth}\r\n    try {\r\n\r\n        // send userEmail, userAuth\r\n        const { data } = await axios.put(\r\n            `${apiUrl}/api/users/user-permissions`,\r\n            user,\r\n            {headers}\r\n        )\r\n\r\n        // return all data outside.\r\n        return data\r\n\r\n\r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// @desc    get a single user.\r\n// @route   [GET] /api/users/:id\r\n// @access  Admin.\r\n// @payload \r\n\r\n// @desc    create user.\r\n// @route   [POST] /api/users/createUser\r\n// @access  Admin.\r\n// @payload \r\n\r\n// @desc    update user.\r\n// @route   [PUT] /api/users/updateUser\r\n// @access  Admin.\r\n// @payload \r\n\r\n// @desc    remove user.\r\n// @route   [DELETE] /api/users/deleteUser\r\n// @access  Admin.\r\n// @payload \r\n\r\n\r\nconst userMethods = {\r\n    getAllUsers,\r\n    userPermissions\r\n}\r\n\r\nexport default userMethods"]},"metadata":{},"sourceType":"module"}