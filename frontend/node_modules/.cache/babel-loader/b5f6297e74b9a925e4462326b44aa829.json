{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\employee-managment-system\\\\frontend\\\\src\\\\context\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { getAllEmployees, createEmployee, editEmployee, deleteEmployee } from '../services/employeeService';\nimport { registerUser, loginUser } from '../services/userService';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/createContext();\nexport function Provider(props) {\n  _s();\n\n  // all Employees list. \n  const [allEmployees, setAllEmployees] = useState([]); // add employee States\n\n  const [addEmployeeForm, setAddEmployeeForm] = useState({\n    displayed: false\n  }); // edit employee States\n\n  const [editEmployeeForm, setEditEmployeeForm] = useState({\n    displayed: false,\n    employee: {}\n  });\n  const [currentEmployee, setCurrentEmployee] = useState({}); // mobile mode options [remove / edit].\n\n  const [mobileOptions, setMobileOptions] = useState(false); // after change State \n\n  const [isChange, setIsChange] = useState(false); // [GET] get all Employees from server.\n\n  useEffect(() => {\n    getAllEmployees().then(Employees => setAllEmployees(Employees));\n  }, [isChange]); // user \n\n  const userSignUp = user => {\n    registerUser(user).then(res => {\n      if (res && res.token) {\n        // success\n        window.location = '/';\n      } else {\n        // faild\n        if (localStorage.getItem('Language') === 'en') toast.error(res);\n        if (localStorage.getItem('Language') === 'he') toast.error('משתמש כבר קיים במערכת');\n      }\n    });\n  };\n\n  const userSignIn = data => {\n    loginUser(data.email, data.password).then(res => {\n      if (res && res.token) {\n        // success\n        window.location = '/';\n      } else {\n        // faild\n        if (localStorage.getItem('Language') === 'en') toast.error(res);\n        if (localStorage.getItem('Language') === 'he') toast.error('חשבון לא נמצא, אימייל או הסיסמה שגויים');\n      }\n    });\n  }; // employees\n\n\n  const getEmployeebyId = empId => {};\n\n  const addEmployee = newEmployee => {\n    createEmployee(newEmployee).then(res => {\n      setAddEmployeeForm(false);\n      setIsChange(!isChange); // Send an indication to the user\n\n      if (localStorage.getItem('Language') === 'en') toast.success('new employee added successfully.');\n      if (localStorage.getItem('Language') === 'he') toast.success('עובד חדש נוסף בהצלחה.');\n    });\n  };\n\n  const updateEmployee = (employeeId, updateEmployee) => {\n    editEmployee(employeeId, updateEmployee).then(res => {\n      setEditEmployeeForm({\n        displayed: false,\n        employee: {}\n      });\n      setIsChange(!isChange); // Send an indication to the user\n\n      if (localStorage.getItem('Language') === 'en') toast.success('Employee updated successfully.');\n      if (localStorage.getItem('Language') === 'he') toast.success('עובד עודכן בהצלחה.');\n    });\n  };\n\n  const removeEmployee = employeeId => {\n    deleteEmployee(employeeId).then(res => {\n      setIsChange(!isChange); // Send an indication to the user\n\n      if (localStorage.getItem('Language') === 'en') toast.success('Employee removed successfully.');\n      if (localStorage.getItem('Language') === 'he') toast.success('עובד הוסר בהצלחה.');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      // user:\n      // employees:\n      allEmployees,\n      addEmployeeForm,\n      setAddEmployeeForm,\n      editEmployeeForm,\n      currentEmployee,\n      setCurrentEmployee,\n      setEditEmployeeForm,\n      // mobile mode \n      mobileOptions,\n      setMobileOptions,\n      actions: {\n        // user: \n        userSignUp,\n        userSignIn,\n        // employees:\n        getEmployeebyId,\n        addEmployee,\n        updateEmployee,\n        removeEmployee\n      }\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Provider, \"tmCT2bK7n/FonPZM8M2d8OY4l84=\");\n\n_c = Provider;\nexport const Consumer = Context.Consumer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"sources":["C:/GitHub/employee-managment-system/frontend/src/context/index.js"],"names":["React","createContext","useState","useEffect","getAllEmployees","createEmployee","editEmployee","deleteEmployee","registerUser","loginUser","toast","Context","Provider","props","allEmployees","setAllEmployees","addEmployeeForm","setAddEmployeeForm","displayed","editEmployeeForm","setEditEmployeeForm","employee","currentEmployee","setCurrentEmployee","mobileOptions","setMobileOptions","isChange","setIsChange","then","Employees","userSignUp","user","res","token","window","location","localStorage","getItem","error","userSignIn","data","email","password","getEmployeebyId","empId","addEmployee","newEmployee","success","updateEmployee","employeeId","removeEmployee","actions","children","Consumer"],"mappings":"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","sourcesContent":["import React, {createContext, useState, useEffect} from \"react\";\r\nimport { getAllEmployees, createEmployee, editEmployee, deleteEmployee } from '../services/employeeService'\r\nimport { registerUser, loginUser } from '../services/userService'\r\nimport {toast}  from 'react-toastify';\r\n\r\nconst Context = createContext()\r\n\r\n\r\nexport function Provider(props) {\r\n   \r\n    // all Employees list. \r\n    const [allEmployees, setAllEmployees] = useState([])\r\n\r\n    // add employee States\r\n    const [addEmployeeForm, setAddEmployeeForm] = useState({ displayed: false})\r\n\r\n    // edit employee States\r\n    const [editEmployeeForm, setEditEmployeeForm] = useState({ displayed: false, employee: {}})\r\n    const [currentEmployee, setCurrentEmployee] = useState({})\r\n\r\n    // mobile mode options [remove / edit].\r\n    const [mobileOptions, setMobileOptions] = useState(false)\r\n\r\n    // after change State \r\n    const [isChange, setIsChange] = useState(false)\r\n\r\n\r\n\r\n\r\n    // [GET] get all Employees from server.\r\n    useEffect(() => {\r\n        getAllEmployees()\r\n        .then(Employees => setAllEmployees(Employees))\r\n    },[isChange])\r\n\r\n    \r\n    // user \r\n    const userSignUp = (user) => {\r\n        registerUser(user)\r\n        .then( res => {\r\n            if( res && res.token ) {\r\n                // success\r\n                window.location = '/'\r\n            } else {\r\n                // faild\r\n                if( localStorage.getItem('Language') === 'en' )  toast.error(res)\r\n                if( localStorage.getItem('Language') === 'he' )  toast.error('משתמש כבר קיים במערכת')\r\n            }\r\n        })\r\n    }\r\n\r\n    const userSignIn = (data) => {\r\n        loginUser(data.email, data.password)\r\n        .then( res => {\r\n            if( res && res.token ) {\r\n                // success\r\n                window.location = '/'\r\n            } else {\r\n                // faild\r\n                if( localStorage.getItem('Language') === 'en' )  toast.error(res)\r\n                if( localStorage.getItem('Language') === 'he' )  toast.error('חשבון לא נמצא, אימייל או הסיסמה שגויים')\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    // employees\r\n    const getEmployeebyId = (empId) => {    \r\n    }\r\n    const addEmployee = (newEmployee) => {\r\n        createEmployee(newEmployee)\r\n        .then( res => {\r\n            setAddEmployeeForm(false)\r\n            setIsChange( !isChange );\r\n            // Send an indication to the user\r\n            if( localStorage.getItem('Language') === 'en' )  toast.success('new employee added successfully.')\r\n            if( localStorage.getItem('Language') === 'he' )  toast.success('עובד חדש נוסף בהצלחה.')\r\n        })\r\n        \r\n    }\r\n    const updateEmployee = (employeeId, updateEmployee) => {\r\n        editEmployee(employeeId, updateEmployee)\r\n        .then( res => {\r\n            setEditEmployeeForm({ displayed: false, employee: {}})\r\n            setIsChange( !isChange );\r\n            // Send an indication to the user\r\n            if( localStorage.getItem('Language') === 'en' )  toast.success('Employee updated successfully.')\r\n            if( localStorage.getItem('Language') === 'he' )  toast.success('עובד עודכן בהצלחה.')\r\n        })\r\n    }\r\n    const removeEmployee = (employeeId) => {\r\n        deleteEmployee(employeeId)\r\n        .then( res => {\r\n            setIsChange( !isChange )\r\n            // Send an indication to the user\r\n            if( localStorage.getItem('Language') === 'en' )  toast.success('Employee removed successfully.')\r\n            if( localStorage.getItem('Language') === 'he' )  toast.success('עובד הוסר בהצלחה.')\r\n        })\r\n    }\r\n    \r\n\r\n    return (\r\n        <Context.Provider\r\n            value={{\r\n                // user:\r\n                // employees:\r\n                allEmployees,\r\n                addEmployeeForm,\r\n                setAddEmployeeForm,\r\n                editEmployeeForm,\r\n                currentEmployee,\r\n                setCurrentEmployee,\r\n                setEditEmployeeForm,\r\n                // mobile mode \r\n                mobileOptions,\r\n                setMobileOptions,\r\n                actions: {\r\n                    // user: \r\n                    userSignUp,\r\n                    userSignIn,\r\n                    // employees:\r\n                    getEmployeebyId,\r\n                    addEmployee,\r\n                    updateEmployee,\r\n                    removeEmployee,\r\n                }\r\n\r\n            }}\r\n        >\r\n            {props.children}\r\n        </Context.Provider>\r\n    ) \r\n}\r\n \r\n\r\nexport const Consumer = Context.Consumer"]},"metadata":{},"sourceType":"module"}