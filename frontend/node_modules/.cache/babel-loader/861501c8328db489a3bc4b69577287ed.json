{"ast":null,"code":"import axios from 'axios';\nimport { apiUrl, headers } from '../config/config'; // @desc    Send to server the user's email (To get a password reset link).\n// @route   [POST] /user-helper/forgot-password\n// @access  Public\n// @payload {email}.\n\nexport async function sendResetPassToEmail(email) {\n  try {\n    // get a single employee byid - to the data variable with content-type in headers\n    const {\n      data\n    } = await axios.post(`${apiUrl}/user-helper/forgot-password`, {\n      email\n    }); // return all data outside \n\n    return data;\n  } catch (err) {\n    if (err.response) {\n      return err.response.data.message;\n    }\n  }\n} // @desc    get reset-password EJS html.\n// @route   [PUT] /user-helper/reset-password/:token\n// @access  Public\n// @payload /:id/:token\n\nexport async function updateNewUserPassword(password, token) {\n  console.log('userHelper Service ------', password);\n\n  try {\n    // get a single employee byid - to the data variable with content-type in headers\n    const {\n      data\n    } = await axios.put(`${apiUrl}/user-helper/reset-password/${token}`, {\n      password\n    }); // return all data outside.\n\n    return data;\n  } catch (err) {\n    if (err.response) {\n      return err.response.data.message;\n    }\n  }\n}","map":{"version":3,"sources":["C:/GitHub/employee-managment-system/frontend/src/services/userHelperService.js"],"names":["axios","apiUrl","headers","sendResetPassToEmail","email","data","post","err","response","message","updateNewUserPassword","password","token","console","log","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,kBAAhC,C,CAMA;AACA;AACA;AACA;;AACA,OAAO,eAAeC,oBAAf,CAAoCC,KAApC,EAA0C;AAE7C,MAAI;AACA;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,IAAN,CAClB,GAAEL,MAAO,8BADS,EAEnB;AAACG,MAAAA;AAAD,KAFmB,CAAvB,CAFA,CAOA;;AACA,WAAOC,IAAP;AAEH,GAVD,CAUG,OAAOE,GAAP,EAAY;AACX,QAAIA,GAAG,CAACC,QAAR,EAAmB;AACf,aAAOD,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,OAAzB;AACH;AACJ;AACJ,C,CAGD;AACA;AACA;AACA;;AACA,OAAO,eAAeC,qBAAf,CAAqCC,QAArC,EAA+CC,KAA/C,EAAqD;AACxDC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCH,QAAzC;;AACA,MAAI;AACA;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACe,GAAN,CAClB,GAAEd,MAAO,+BAA8BW,KAAM,EAD3B,EAEnB;AAACD,MAAAA;AAAD,KAFmB,CAAvB,CAFA,CAOA;;AACA,WAAON,IAAP;AAEH,GAVD,CAUG,OAAOE,GAAP,EAAY;AACX,QAAIA,GAAG,CAACC,QAAR,EAAmB;AACf,aAAOD,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,OAAzB;AACH;AACJ;AACJ","sourcesContent":["import axios from 'axios';\r\nimport { apiUrl, headers } from '../config/config'\r\n\r\n\r\n\r\n\r\n\r\n// @desc    Send to server the user's email (To get a password reset link).\r\n// @route   [POST] /user-helper/forgot-password\r\n// @access  Public\r\n// @payload {email}.\r\nexport async function sendResetPassToEmail(email){\r\n    \r\n    try {\r\n        // get a single employee byid - to the data variable with content-type in headers\r\n        const { data } = await axios.post(\r\n            `${apiUrl}/user-helper/forgot-password`,\r\n            {email},\r\n        )\r\n\r\n        // return all data outside \r\n        return data\r\n             \r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// @desc    get reset-password EJS html.\r\n// @route   [PUT] /user-helper/reset-password/:token\r\n// @access  Public\r\n// @payload /:id/:token\r\nexport async function updateNewUserPassword(password, token){\r\n    console.log('userHelper Service ------', password);\r\n    try {\r\n        // get a single employee byid - to the data variable with content-type in headers\r\n        const { data } = await axios.put(\r\n            `${apiUrl}/user-helper/reset-password/${token}`,\r\n            {password},\r\n        )\r\n        \r\n        // return all data outside.\r\n        return data\r\n\r\n    }  catch (err) {\r\n        if( err.response ) {\r\n            return err.response.data.message\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}